## To find the filters and parameters, search for 'Parameters and filters'

##Columns
col:

  activityName:
    system: "activityName"
    name: "Activity title"
    desc: "The title of the activity."
    type: "Text / String"

  activityID:
    system: "activityID"
    name: "Activity ID"
    desc: "The ID of this activity. ID is auto-generated by CrossKnowledge platform, is unique and will be the activity unique identifier."
    type: "Integer / Int"

  activityDuration:
    system: "activityDuration"
    name: "Activity duration"
    desc: "The activity duration can be defined when the activity is created or edited in a session or training."
    type: "Text / String"

  activityFirstAccessDate:
    system: "activityFirstAccessDate"
    name: "Activity first access date"
    desc: "It will return the date and time (the options for the format are available at the parameters table) when the activity has been first accessed by the learner."
    type: "Date and time"

  activityLastAccessDate:
    system: "activityLastAccessDate"
    name: "Activity last access date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the activity has been last accessed by the learner."
    type: "Date and time"

  activityPoints:
    system: "activityPoints"
    name: "Activity points"
    desc: "Each activity must have a number of points that the learner will receive when he/she finish that activity. This amount is defined when the activity is created."
    type: "Integer / Int"

  activityType:
    system: "activityType"
    name: "Activity type"
    desc: "It will define the type of the activity. Possible types: learning resouce, web resource, editorial, classroom activity, open question, poll, assignment, assessment, quiz, action plan, measure your progress, end-of-course survey."
    type: "Text / String"

  attendanceStatus:
    system: "attendanceStatus"
    name: "Classroom attendance status"
    desc: "If the type of the activity is 'Classroom activity', this field will have the learner attendance. It can be: present, absent, absent but excused, no information or not applicable. If the activity is not a 'classroom activity', this field will be empty."
    type: "Text / String"

  badge:
    system: "badge"
    name: "Badge label"
    desc: "The system has some default badge labels: Top of the class (Learn conscientiously), Public Speaker (Help others to learn), Curious (Discover new things) and Lead (Share your expertise). Each badge has 3 categories: Gold, Silver and Bronze."
    type: "Text / String"

  badgeCategory:
    system: "badgeCategory"
    name: "Badge category"
    desc: "The learner can achieve one of these categories for each badge: Gold, Silver and Bronze."
    type: "List"

  badgeCode:
    system: "badgeCode"
    name: "Badge ID"
    desc: "The badge unique identifier. It is automatically set by CrossKnowledge platform."
    type: "Text / String"

  badgeDateTime:
    system: "badgeDateTime"
    name: "Badge reached date"
    desc: "It will return the date and time when the badge has been achieved by the learner. "
    type: "Date and time"

  candidateAccountActivated:
    system: "candidateAccountActivated"
    name: "Learner active"
    desc: "The status of the learning account. If 'Y', the learner profile is active. If 'N', his profile is disabled. If 'U' the learner account will be active for a period. With 'U' the fields 'Learner active from' and 'Learner active until' should be filled."
    type: "List"

  candidateAccountActivatedFrom:
    system: "candidateAccountActivatedFrom"
    name: "Learner active from"
    desc: "The date when the learner account will become active for a period. The 'Learner active' field will be as 'U'."
    type: "Date"

  candidateAccountActivatedUntil:
    system: "candidateAccountActivatedUntil"
    name: "Learner active until"
    desc: "The date when the learner account will be disabled and he will not be able to access the platform anymore. The 'Learner active' field will be as 'U'."
    type: "Date"

  candidateBadges:
    system: "candidateBadges"
    name: "Learner badges"
    desc: "The amount of badges achieved by the learner."
    type: "Integer / Int"

  candidateCustomFieldGuid:
    system: "candidateCustomFieldGuid"
    name: "Learner custom field"
    desc: " This field will allow you to have learner data for custom fields on the platform. It will be an alphanumeric field (allows numbers and text). Maximum 250 characters."
    type: "Text / String (250)"

  candidateEmail:
    system: "candidateEmail"
    name: "Learner email"
    desc: "The learner email must be valid. The format: xxxxx@xxxx.com is expected. It is not recomended to use email as login. If you have more doubts, please talk to the Integration Consultant team."
    type: "Text / String"
    
  candidateEntityAncestors:
    system: "candidateEntityAncestors"
    name: "Learner entity ancestors"
    desc: "The learner entity and all the ancestors. Example: All users -> Entity 01 -> Entity 01.1"
    type: "Text / String"

  candidateEntityId:
    system: "candidateEntityId"
    name: "Learner entity ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the official entity identification. It can be obtained via API or Export report if the entity is already created."
    type: "Integer / Int"

  candidateEntityName:
    system: "candidateEntityName"
    name: "Learner entity name"
    desc: "Only the learner entity. Example: Entity 01.1"
    type: "Text / String"

  candidateFirstname:
    system: "candidateFirstname"
    name: "Learner first name"
    desc: "We recommend splitting learner first name and surname because it will allow the learner to have a better user experience."
    type: "Text / String"

  candidateFollowLinkedin:
    system: "candidateFollowLinkedin"
    name: "Learner LinkedIn"
    desc: "The learner's LinkedIn username. It is a text field, so the learner can put the LinkedIn URL, but it will not be clickable."
    type: "Text / String (250)"

  candidateFollowTwitter:
    system: "candidateFollowTwitter"
    name: "Learner Twitter"
    desc: "The learner's Twitter username. It is a text field, so the learner can put the Twitter URL, but it will not be clickable."
    type: "Text / String (250)"

  candidateFollowWeb:
    system: "candidateFollowWeb"
    name: "Learner Website"
    desc: "The learner's website URL. It is a text field, the URL will not be clickable."
    type: "Text / String (250)"

  candidateGuid:
    system: "candidateGuid"
    name: "Learner GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform and is unique. The GUID can be the learner identification. It can be obtained via API or Export report if the learner is already created. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  candidateId:
    system: "candidateId"
    name: "Learner ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the learner identification. It can be obtained via API or Export report if the learner is already created."
    type: "Integer / Int"

  candidateLocale:
    system: "candidateLocale"
    name: "Learner language"
    desc: "The interface language available for the learner. It is set in the learner profile"
    type: "Text / String"

  candidateLocales:
    system: "candidateLocales"
    name: "Learner language"
    desc: "The interface language available for the learner. It is set in the learner profile"
    type: "Text / String"

  candidateLogin:
    system: "candidateLogin"
    name: "Learner login"
    desc: "The learner login must be unique. It should be the learner data that will not change, avoiding creating future issues."
    type: "Text / String"

  candidateName:
    system: "candidateName"
    name: "Learner surname"
    desc: "We recommend splitting learner surname and first name because it will allow the learner to have a better user experience."
    type: "Text / String"

  candidatePoints:
    system: "candidatePoints"
    name: "Learner points"
    desc: "How many points the learner achieved."
    type: "Integer / Int"

  candidatePresentation:
    system: "candidatePresentation"
    name: "Learner presentation"
    desc: "The learner's presentation text."
    type: "Text / Longtext"

  candidateRefNumber:
    system: "candidateRefNumber"
    name: "Learner reference field"
    desc: "This field is usually used for learner ID that the client already has on his side. This can be useful to help the client to search for a specific learner using unique data that he already use on his platform."
    type: "Text / String"

  candidateSmartgroups:
    system: "candidateSmartgroups"
    name: "Learner smartgroups"
    desc: "It is possible to have a list of learner's smartgroups separated by semicolons."
    type: "Text / String"

  candidateTimeZone:
    system: "candidateTimeZone"
    name: "Learner timezone"
    desc: "The learner time zone set up at the learner profile."
    type: "Text / String"

  catalogVisibility:
    system: "catalogVisibility"
    name: "Training visibility"
    desc: "It will be 'Y' if the training is visible on the public catalogue and 'N' otherwise."
    type: "Y or N"

  sessionCompletionTime:
    system: "completionTime"
    name: "Session last access date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the session has been last accessed by the learner."
    type: "Date and time"

  contentCompletionTime:
    system: "completionTime"
    name: "Content last access date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the content has been last accessed by the learner."
    type: "Date and time"

  constantValue:
    system: "constantValue"
    name: "Constant value"
    desc: "This field helps the Integration Consultant to generate some specific data, when necessary."
    type: "Text / String"

  contentGuid:
    system: "contentGUID"
    name: "Content GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform and is unique. The GUID can be the content identification. It can be obtained via API or Export report if the content is already created. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  contentLocale:
    system: "contentLocale"
    name: "Content language"
    desc: "It can be helpful when the same content has different versions and are available in different languages."
    type: "Text / String"

  contentRefNumber:
    system: "contentRefNumber"
    name: "Content reference field"
    desc: "This field is usually used for content ID that the client already has on their side. This can be useful to help the client searching for a specific content using unique data that they already use on their platform."
    type: "Text / String"
  
  contentTitle:
    system: "contentTitle"
    name: "Content title"
    desc: "The title of the content."
    type: "Text / String"

  learnerCreationDate:
    system: "creationDate"
    name: "Learner creation date"
    desc: "The date when the learner was created."
    type: "Date"

  sessionCreationDate:
    system: "creationDate"
    name: "Session creation date"
    desc: "The date when the session was created."
    type: "Date"

  trainingCreationDate:
    system: "creationDate"
    name: "Training creation date"
    desc: "The date when the training was created."
    type: "Date"

  description:
    system: "description"
    name: "Training description"
    desc: "The training description will be available on training page, widgets and search results. It can be set up at 'Short description' field in 'General settings' step."
    type: "Text / Longtext"

    contentDescription:
    system: "description"
    name: "Content description"
    desc: "It is the content description."
    type: "Text / Longtext"

    sessionDescription:
    system: "description"
    name: "Session description"
    desc: "It is the session description."
    type: "Text / Longtext"

    trainingDescription:
    system: "trainingDescription"
    name: "Training description"
    desc: "The training description will be available on training page, widgets and search results. It can be set up at 'Short description' field in 'General settings' step."
    type: "Text / Longtext"

  endDate:
    system: "endDate"
    name: "Session end date"
    desc: "The date when the session will be closed."
    type: "Date"

  eventAllDay:
    system: "eventAllDay"
    name: "Event all day"
    desc: "It will be 'Y' if the event is during all day or 'N' otherwise. It can be done inside each event, when the date is set up. One Classroom activity can have many events." 
    type: "Y or N"

  eventClassRoomCapacity:
    system: "eventClassRoomCapacity"
    name: "Room capacity"
    desc: "It will return the capacity of each classroom where the events will occur. The available seats field is defined when the room is created on BackOffice."
    type: "Integer / Int"

  eventClassRoomDescription:
    system: "eventClassRoomDescription"
    name: "Room description"
    desc: "The room description is defined when the room is created on BackOffice and the main goal is to set some additional informations about the room where the events will occur."
    type: "Text / Longtext"

  eventClassRoomEquipments:
    system: "eventClassRoomEquipments"
    name: "Room equipments"
    desc: "The equipments available in the specified room."
    type: "Text / String"

  eventClassRoomTitle:
    system: "eventClassRoomTitle"
    name: "Room title"
    desc: "It is defined when the room is created on BackOffice and will be useful as a quickly room identifier."
    type: "Text / String"

  eventClassRoomType:
    system: "eventClassRoomType"
    name: "Room type"
    desc: "It will be defined while creating the room in BackOffice and can not be edited. It can be a Standard (face-to-face) or a Virtual room."
    type: "List"

  eventDescription:
    system: "eventDescription"
    name: "Event description"
    desc: "It will return a text explaining what will be learned during that event. It is set when the classroom activity is being created on BackOffice."
    type: "Text / Longtext"

  eventDuration:
    system: "eventDuration"
    name: "Event duration"
    desc: "How many minutes or hours this event will take. It is defined when the classroom activity is created."
    type: "Integer / Int"

  eventEndDate:
    system: "eventEndDate"
    name: "Event end date"
    desc: "The date when the event will end. It can change for each event."
    type: "Date"

  eventEndTime:
    system: "eventEndTime"
    name: "Event end time"
    desc: "The time when the event will end."
    type: "Time"

  eventFacilitator:
    system: "eventFacilitator"
    name: "Event admin facilitator"
    desc: "Each event can have a facilitator for the admin interface. The facilitator needs to have an admin access. "
    type: "Text / String"

  eventFacilitatorGuid:
    system: "eventFacilitatorGuid"
    name: "Event admin facilitator GUID"
    desc: "The GUID will be the admin facilitator identification. GUID is auto-generated by CrossKnowledge platform and is unique. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  eventLocation:
    system: "eventLocation"
    name: "Event location"
    desc: "Each event can have a different location where it will occur. The location can be registered at admin interface and will be available for all the events."
    type: "Text / String"

  eventLocationID:
    system: "eventLocationID"
    name: "Event location ID"
    desc: "The ID will be the location identification. ID is auto-generated by CrossKnowledge platform and is unique."
    type: "Integer / Int"

  eventRoom:
    system: "eventRoom"
    name: "Event room"
    desc: "Each event can have a different room where it will occur and will have a specific amount of seats available (room capacity). The room can be registered at admin interface and will be available for all the events. Each room can be associated to a location or not. The room can be: Standard (face-to-face events) or Virtual. For virtual rooms, we have these options (but it is necessary to have an account on these softwares to use): Webex, Adobe Connect and Classilio."
    type: "Text / String"
  
  eventRoomGuid:
    system: "eventRoomGuid"
    name: "Event room GUID"
    desc: "The GUID will be the room identification. GUID is auto-generated by CrossKnowledge platform and is unique. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  eventID:
    system: "eventID"
    name: "Event ID"
    desc: "The ID will be the event identification. ID is auto-generated by CrossKnowledge platform and is unique. "
    type: "Integer / Int"

  eventStartDate:
    system: "eventStartDate"
    name: "Event start date"
    desc: "The date when the event will start. It can change for each event."
    type: "Date"
  
  eventStartTime:
    system: "eventStartTime"
    name: "Event start time"
    desc: "The time when the event will start."
    type: "Time"

  eventStatus:
    system: "eventStatus"
    name: "Event status"
    desc: "These are the available event status: C (Confirmed), P (Pending) and CA (Cancelled)."
    type: "List"

  eventTeacher:
    system: "eventTeacher"
    name: "Event learner facilitator name"
    desc: "The learner facilitator will be responsible for helping the learners during the event. And this role allows him to update the attendance list."
    type: "Text / String"

  eventTimeZone:
    system: "eventTimeZone"
    name: "Event timezone"
    desc: "Each event can have a different timezone. If the location is defined, the timezone will follow the location timezone. Otherwise, it can be set individually. "
    type: "Text / String"

  eventTitle:
    system: "eventTitle"
    name: "Event title"
    desc: "The event title is defined when the Classroom activity is created and it is a mandatory field."
    type: "Text / String"

  eventVirtualMeetingURL:
    system: "eventVirtualMeetingURL"
    name: "Event virtual meeting URL"
    desc: "If the Classroom type is 'Virtual', then a 'Virtual room' field will be available when the event is created. There the facilitator should put the meeting link, enabling the learners to have access to this class."
    type: "URL"

  eventVirtualRoomLink:
    system: "eventVirtualRoomLink"
    name: "Event virtual room link"
    desc: "If the Classroom type is 'Virtual', then a 'Virtual room' field will be available when the event is created. There the facilitator should put the meeting link, enabling the learners to have access to this class."
    type: "URL"

  feedbackDate:
    system: "feedbackDate"
    name: "Feedback date"
    desc: "If the type of the activity is 'Assignment' or 'Assessment', this field will have the date when the facilitator sent the feedback to the learner."
    type: "Date and time"

  sessionFirstCompletionDate:
    system: "firstCompletionDate"
    name: "Session completion date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the session has been completed by the learner."
    type: "Date and time"

  contentFirstCompletionDate:
    system: "firstCompletionDate"
    name: "Content completion date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the content has been completed by the learner."
    type: "Date and time"

  sessionFirstLaunchDate:
    system: "firstLaunchDate"
    name: "Session launch date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the session has been launched on the training."
    type: "Date and time"

  contentFirstLaunchDate:
    system: "firstLaunchDate"
    name: "Content launch date"
    desc: "It will return the date and time (the options for the format are available on the parameters table) when the content has been launched on the session."
    type: "Date and time"

  foFacilitatorName:
    system: "foFacilitatorName"
    name: "Event learner facilitator surname"
    desc: "Each event can have a facilitator for the learner interface. This field will contain the last name of the learner facilitator. This facilitator needs to have a learner account and be set for the session as 'Learner interface facilitator'."
    type: "Text / String"
  
  foFacilitatorFirstname:
    system: "foFacilitatorFirstname"
    name: "Event learner facilitator first name"
    desc: "Each event can have a facilitator for the learner interface. This field will contain the first name of the learner facilitator. This facilitator needs to have a learner account and be set for the session as 'Learner interface facilitator'."
    type: "Text / String"

  foFacilitatorEmail:
    system: "foFacilitatorEmail"
    name: "Event learner facilitator email"
    desc: "Each event can have a facilitator for the learner interface. This field will contain the email of the learner facilitator. This facilitator needs to have a learner account and be set for the session as 'Learner interface facilitator'."
    type: "Text / String"

  gamificationAction:
    system: "gamificationAction"
    name: "Gamification description"
    desc: "The actions the learner did on the platform to receive the points. E.g: Complete a course - The learner earn points every time he completes a course."
    type: "Text / String"

  gamificationActionCode:
    system: "gamificationActionCode"
    name: "Gamification code"
    desc: "The gamification description unique identifier. It is automatically set by CrossKnowledge platform."
    type: "Text / String"

  gamificationDateTime:
    system: "gamificationDateTime"
    name: "Gamification reached date"
    desc: "It will return the date and time when the learner achieved the gamification point. "
    type: "Date and time"

  gamificationPoints:
    system: "gamificationPoints"
    name: "Gamification points"
    desc: "Each gamification description has a number of points that the learner will receive when he/she achieve that gamification. The platform has some default points for the gamifications, but it can be changed in the 'Set up' tab."
    type: "Integer / Int"

  lastPlatformAccessDate:
    system: "lastPlatformAccessDate"
    name: "Last platform access date"
    desc: "It will return the last date and time (there are some options to data format available on the parameter table) when the learner accessed the platform."
    type: "Date and time"

  learningObjectAssignements:
    system: "learningObjectAssignements"
    name: "Learning object tracking assignment"
    desc: "How many trackings are associated to this specific learning object. E.g: The learning object 'Video A' is related to 10 different trackings."
    type: "Integer / Int"

  learningObjectAuthorFirstName:
    system: "learningObjectAuthorFirstName"
    name: "Learning object author first name"
    desc: "If the learning object has an author field filled in the platform, it will show his/her first name."
    type: "Text / String"

  learningObjectAuthorId:
    system: "learningObjectAuthorId"
    name: "Learning object author ID"
    desc: "The author identification. The ID is auto-generated by CrossKnowledge and it is unique."
    type: "Integer / Int"

  learningObjectAuthorLastName:
    system: "learningObjectAuthorLastName"
    name: "Learning object author last name"
    desc: "If the learning object has an author field filled in the platform, it will show his/her last name."
    type: "Text / String"

  learningObjectAverageCompletionTime:
    system: "learningObjectAverageCompletionTime"
    name: "Learning object average time"
    desc: "The average time the learners spent doing this learning object. It is returned in minutes."
    type: "Integer / Int"

  learningObjectAverageScore:
    system: "learningObjectAverageScore"
    name: "Learning object average score"
    desc: "The average score the learners got in this learning object."
    type: "Decimal / float"

  learningObjectCode:
    system: "learningObjectCode"
    name: "Learning object reference field"
    desc: "The reference field for the learning object. It can be helpful when the client already have an identification code for the learning object and wants to use this code to facilitate the search on CrossKnowledge platform."
    type: "Text / String"

  learningObjectCompletions:
    system: "learningObjectCompletions"
    name: "Learning object tracking completion"
    desc: "How many completed trackings are associated to this specific learning object. E.g: The learning object 'Video A' was completed 5 times in the instance."
    type: "Integer / Int"

  learningObjectCreationDate:
    system: "learningObjectCreationDate"
    name: "Learning object creation date"
    desc: "The date and time when the learning object was created on the platform."
    type: "Date and time"

  learningObjectDisplayedType:
    system: "learningObjectDisplayedType"
    name: "Learning object displayed type"
    desc: "The category of available learning object types. Some examples: Interactive contents, images, videos, audios, office document."
    type: "Text / String (50)"

  learningObjectDuration:
    system: "learningObjectDuration"
    name: "Learning object duration"
    desc: "This value is defined when the content is created. The duration of the learning object."
    type: "Interger / int"

  learningObjectFirstLaunchDate:
    system: "learningObjectFirstLaunchDate"
    name: "Learning object first launch date"
    desc: "The date when the learning object was launched in a session/training for the first time."
    type: "Date and time"

  learningObjectGuid:
    system: "learningObjectGuid"
    name: "Learning object GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform and is unique. The GUID can be the learning object identification. It can be obtained via API or Export report if the content is already created. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8."
    type: "Text / String (40)"

  learningObjectId:
    system: "learningObjectId"
    name: "Learning object ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the official learning object identification. It can be obtained via API or Export report if the learning object is already created."
    type: "Integer / Int"

  learningObjectIncludedInLO:
    system: "learningObjectIncludedInLO"
    name: "Learning object included topics"
    desc: "This field is available when you are creating/updating a learning object. In the BackOffice you can find it in 'Included in this learning object' field."
    type: "Text / Longtext"

  learningObjectLastLaunchDate:
    system: "learningObjectLastLaunchDate"
    name: "Learning object last launch date"
    desc: "The date when the learning object was launched in a session/training for the last time."
    type: "Date and time"

  learningObjectLearningPoints:
    system: "learningObjectLearningPoints"
    name: "Learning object learning points"
    desc: "This field is available when you are creating/updating a learning object. In the BackOffice you can find it in 'What you will learn' field."
    type: "Text / Longtext"

  learningObjectLevel:
    system: "learningObjectLevel"
    name: "Learning object level"
    desc: "The level is defined when the learning object is being created. Available results: 0 (No level), 1 (beginner), 2 (intermediate), 3 (advanced)."
    type: "List"

  learningObjectLocales:
    system: "learningObjectLocales"
    name: "Learning object language"
    desc: "The language available for the learning object. It can be defined when the learning object is being created or updated."
    type: "Text / String"

  learningObjectModificationDate:
    system: "learningObjectModificationDate"
    name: "Learning object modification date"
    desc: "The last time when the learning object was updated."
    type: "Date and time"

  learningObjectNbOfComments:
    system: "learningObjectNbOfComments"
    name: "Learning object amount of comments"
    desc: "It will return how many comments this learning object has in all the sessions/trainings."
    type: "Integer / Int"

  learningObjectNbTimesFavorited:
    system: "learningObjectNbTimesFavorited"
    name: "Learning object amount of favorites"
    desc: "It will return how many times this learning object was favorited in all the sessions/trainings."
    type: "Integer / Int"

  learningObjectPublisher:
    system: "learningObjectPublisher"
    name: "Learning object publisher"
    desc: "A publisher is any website, company or anyone who provides some contents to the platform."
    type: "Text / String"

  learningObjectRatingByLearners:
    system: "learningObjectRatingByLearners"
    name: "Learning object average ratings"
    desc: "The average rating given by the learners in this learning object. In the platform, the learners rank the learning object using the stars (0-5) during the session/training."
    type: "Decimal / float"

  learningObjectRatingDisplayed:
    system: "learningObjectRatingDisplayed"
    name: "Learning object displayed rating"
    desc: "The average rating given by the learners in this learning object. In the platform, the learners rank the learning object using the stars (0-5) during the session/training."
    type: "Decimal / float"

  learningObjectRatingNbByLearners:
    system: "learningObjectRatingNbByLearners"
    name: "Learning object amount of learners rating"
    desc: "It will return how many times this learning object was rated by learners in all the sessions/trainings."
    type: "Integer / Int"

  learningObjectRatingNbDisplayed:
    system: "learningObjectRatingNbDisplayed"
    name: "Learning object amount of displayed rating"
    desc: "It will return how many ratings are displayed for this learning object in all the sessions/trainings."
    type: "Integer / Int"

  learningObjectRealCompletionTime:
    system: "learningObjectRealCompletionTime"
    name: "Learning object last launch date"
    desc: "The last date when the learning object was launched. It will be NULL until the learner's progress on this learning object is 100%."
    type: "Date and time"

  learningObjectSummary:
    system: "learningObjectSummary"
    name: "Learning object summary"
    desc: "The description of the learning object. It can be defined when the learning object is being created or updated."
    type: "Text / Longtext"

  learningObjectTags:
    system: "learningObjectTags"
    name: "Learning object tags"
    desc: "The tags associated to the learning object. It can help to classify the learning object. Each learning object can have none or many associated tags."
    type: "Text / Longtext"

  learningObjectTargetAudience:
    system: "learningObjectTargetAudience"
    name: "Learning object target audience"
    desc: "The target audience for the learning object. For whom the learning object is indicated. It is set up when it is being created or updated."
    type: "Text / Longtext"

  learningObjectThemes:
    system: "learningObjectThemes"
    name: "Learning object themes"
    desc: "The themes are helpful to group different learning objects that are related."
    type: "Text / Longtext"

  learningObjectThumbnailLarge:
    system: "learningObjectThumbnailLarge"
    name: "Learning object large thumbnail"
    desc: "The URL to the large-sized thumbnail of the learning object."
    type: "URL"

  learningObjectThumbnailMedium:
    system: "learningObjectThumbnailMedium"
    name: "Learning object medium thumbnail"
    desc: "The URL to the medium-sized thumbnail of the learning object."
    type: "URL"

  learningObjectThumbnailSmall:
    system: "learningObjectThumbnailSmall"
    name: "Learning object small thumbnail"
    desc: "The URL to the small-sized thumbnail of the learning object."
    type: "URL"

  learningObjectTitle:
    system: "learningObjectTitle"
    name: "Learning object title"
    desc: "The title of the learning object."
    type: "Text / String"

  learningObjectTotalTimeSpent:
    system: "learningObjectTotalTimeSpent"
    name: "Learning object time spent"
    desc: "The amount of time that learners spent on the learning object in all the training/sessions."
    type: "Integer / Int"

  learningObjectType:
    system: "learningObjectType"
    name: "Learning object type"
    desc: "The format of the object. Usually this field is not used by the client because it will return some values that are not available at BackOffice and will refer to the same data that the column 'Learning object displayed type' describes. There is some examples: SCORM, AICC, MP3, JPG, PNG, MP4, FLV, PDF, WORD, EXCEL."
    type: "Text / String (50)"

  learningObjectVersionAssignements:
    system: "learningObjectVersionAssignements"
    name: "Learning object version tracking assignment"
    desc: "How many trackings are associated to this specific learning object version. E.g: The learning object version 'Video A - Version 03' is related to 10 different trackings."
    type: "Integer / Int"

  learningObjectVersionAuthorFirstName:
    system: "learningObjectVersionAuthorFirstName"
    name: "Learning object version author first name"
    desc: "If the learning object version has an author field filled in the platform, it will show his/her first name."
    type: "Text / String"

  learningObjectVersionAuthorId:
    system: "learningObjectVersionAuthorId"
    name: "Learning object version author ID"
    desc: "The author identification. The ID is auto-generated by CrossKnowledge and it is unique."
    type: "Integer / Int"

  learningObjectVersionAuthorLastName:
    system: "learningObjectVersionAuthorLastName"
    name: "Learning object version author last name"
    desc: "If the learning object version has an author field filled in the platform, it will show his/her last name."
    type: "Text / String"

  learningObjectVersionAverageCompletionTime:
    system: "learningObjectVersionAverageCompletionTime"
    name: "Learning object version average time"
    desc: "The average time the learners spent doing this learning object version. It is returned in minutes."
    type: "Integer / Int"

  learningObjectVersionAverageScore:
    system: "learningObjectVersionAverageScore"
    name: "Learning object version average score"
    desc: "The average score the learners got in this learning object version."
    type: "Decimal / float"

  learningObjectVersionCode:
    system: "learningObjectVersionCode"
    name: "Learning object version reference field"
    desc: "This field is usually used for learning object version code with client patterns. It can be useful to help the client to identify each learning object version using the patterns that they already defined on their side."
    type: "Text / String"

  learningObjectVersionCompletions:
    system: "learningObjectVersionCompletions"
    name: "Learning object version tracking completion"
    desc: "How many completed trackings are associated to this specific learning object version. E.g: The learning object version 'Video A - Version 03' was completed 5 times in the instance."
    type: "Integer / Int"

  learningObjectVersionCreationDate:
    system: "learningObjectVersionCreationDate"
    name: "Learning object version creation date"
    desc: "The date and time when the learning object version was created on the platform."
    type: "Date and time"

  learningObjectVersionDisplayedType:
    system: "learningObjectVersionDisplayedType"
    name: "Learning object version displayed type"
    desc: "The same data available on BackOffice about the learning object version type. Some data examples: interactive content, audio, video, image, work to submit."
    type: "Text / String"

  learningObjectVersionDuration:
    system: "learningObjectVersionDuration"
    name: "Learning object version duration"
    desc: "This value is defined when the learning object version is created. The duration of this learning object version."
    type: "Integer / Int"

  learningObjectVersionFirstLaunchDate:
    system: "learningObjectVersionFirstLaunchDate"
    name: "Learning object version first launch date"
    desc: "The date when the learning object version was launched in a session/training for the first time."
    type: "Date and time"

  learningObjectVersionGuid:
    system: "learningObjectVersionGuid"
    name: "Learning object version GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform, is unique and can be the official learning object version identifier. It can be obtained via API or Export report if the learning object version is already registered. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8."
    type: "Text / String (40)"

  learningObjectVersionId:
    system: "learningObjectVersionId"
    name: "Learning object version ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the official learning object version identification. It can be obtained via API or Export report if the learning object version is already created."
    type: "Integer / Int"

  learningObjectVersionIncludedInLO:
    system: "learningObjectVersionIncludedInLO"
    name: "Learning object version included topics"
    desc: "This field is available when you are creating/updating a learning object version. In the BackOffice you can find it in 'Included in this learning object' field."
    type: "Text / Longtext"

  learningObjectVersionIsMobile:
    system: "learningObjectVersionIsMobile"
    name: "Learning object version available mobile"
    desc: "If it is 'True', it means the learning object is available on mobile app, otherwise it is not. If the learning object is defined as 'available for mobile', all the learning object version will be available too. It is related to the 'Launchable in the Learn application' field on BackOffice."
    type: "List"

  learningObjectVersionLastLaunchDate:
    system: "learningObjectVersionLastLaunchDate"
    name: "Learning object version last launch date"
    desc: "The date when the learning object version was launched in a session/training for the last time."
    type: "Date and time"

  learningObjectVersionLearningPoints:
    system: "learningObjectVersionLearningPoints"
    name: "Learning object version learning topics"
    desc: "This field is available when you are creating/updating a learning object version. In the BackOffice you can find it in 'What you will learn' field."
    type: "Text / String"

  learningObjectVersionLevel:
    system: "learningObjectVersionLevel"
    name: "Learning object version level"
    desc: "The level is defined when the learning object is being created. Available results: 0 (No level), 1 (beginner), 2 (intermediate), 3 (advanced)."
    type: "List"

  learningObjectVersionLocale:
    system: "learningObjectVersionLocale"
    name: "Learning object version language"
    desc: "It can be helpful when the same learning object has different versions and are available in different languages."
    type: "Text / String"

  learningObjectVersionLoGuid:
    system: "learningObjectVersionLoGuid"
    name: "Learning object version GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform and is unique. The GUID can be the learning object version identification. It can be obtained via API or Export report if the learning object is already created. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8."
    type: "Text / String (40)"

  learningObjectVersionLoId:
    system: "learningObjectVersionLoId"
    name: "Learning object version ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the official learning object version identification. It can be obtained via API or Export report if the learning object is already created."
    type: "Integer / Int"

  learningObjectVersionModificationDate:
    system: "learningObjectVersionModificationDate"
    name: "Learning object version modification date"
    desc: "The last time when the learning object was updated."
    type: "Date and time"

  learningObjectVersionPublisher:
    system: "learningObjectVersionPublisher"
    name: "Learning object version publisher"
    desc: "A publisher is any website, company or anyone who provides some contents to the platform."
    type: "Text / String"

  learningObjectVersionStatus:
    system: "learningObjectVersionStatus"
    name: "Learning object version status"
    desc: "It will return the learning object version status. It can be: Validated, Disabled, Under construction or Pending validation."
    type: "List"

  learningObjectVersionSummary:
    system: "learningObjectVersionSummary"
    name: "Learning object version summary"
    desc: "The description of the learning object version. It can be defined when the learning object is being updated."
    type: "Text / Longtext"

  learningObjectVersionTags:
    system: "learningObjectVersionTags"
    name: "Learning object version tags"
    desc: "The tags associated to the learning object version. It can help to classify the learning objects. Each learning object can have none or many associated tags. It will be defined when the learning object is being updated."
    type: "Text / Longtext"

  learningObjectVersionTargetAudience:
    system: "learningObjectVersionTargetAudience"
    name: "Learning object version target audience"
    desc: "The target audience for the learning object version. For whom the learning object version is indicated. It is set up when the learning object is being updated."
    type: "Text / Longtext"

  learningObjectVersionThemes:
    system: "learningObjectVersionThemes"
    name: "Learning object version themes"
    desc: "The themes are helpful to group different learning objects version that are related."
    type: "Text / Longtext"

  learningObjectVersionThumbnailLarge:
    system: "learningObjectVersionThumbnailLarge"
    name: "Learning object version large thumbnail"
    desc: "The URL to the large-sized thumbnail of the learning object version."
    type: "URL"

  learningObjectVersionThumbnailMedium:
    system: "learningObjectVersionThumbnailMedium"
    name: "Learning object version medium thumbnail"
    desc: "The URL to the medium-sized thumbnail of the learning object version."
    type: "URL"

  learningObjectVersionThumbnailSmall:
    system: "learningObjectVersionThumbnailSmall"
    name: "Learning object version small thumbnail"
    desc: "The URL to the small-sized thumbnail of the learning object version."
    type: "URL"

  learningObjectVersionTitle:
    system: "learningObjectVersionTitle"
    name: "Learning object version title"
    desc: "The title of the learning object version."
    type: "Text / String"

  learningObjectVersionTotalTimeSpent:
    system: "learningObjectVersionTotalTimeSpent"
    name: "Learning object version time spent"
    desc: "The amount of time that learners spent on the learning object version in all the training/sessions."
    type: "Integer / Int"

  learningObjectVersionType:
    system: "learningObjectVersionType"
    name: "Learning object version type"
    desc: "The format of the object. Usually this field is not used by the client because it will return some values that are not available at BackOffice and will refer to the same data that the column 'Learning object version displayed type' describes. Example of data: SCORM, AICC, MP4, JPG, PNG."
    type: "Text / String"

  learningObjectVersionVersion:
    system: "learningObjectVersionVersion"
    name: "Learning object version number"
    desc: "The number of the learning object version. E.g: Interactive content AB - Version 03."
    type: "Integer / Int"

  learningObjectViewsByLearners:
    system: "learningObjectViewsByLearners"
    name: "Learning object views"
    desc: "How many views the learning object had in all the sessions/trainings."
    type: "Integer / Int"

  learningObjectViewsDisplayed:
    system: "learningObjectViewsDisplayed"
    name: "Learning object displayed views"
    desc: "It will return the sum of the learners' views + views from the BackOffice."
    type: "Integer / Int"

  likes:
    system: "likes"
    name: "Activity likes"
    desc: "The number of likes the activity received."
    type: "Integer / Int"

  locale:
    system: "locale"
    name: "Gamification language"
    desc: "The language available for the gamification"
    type: "Text / String"

  logDate:
    system: "logDate"
    name: "Tracking log date"
    desc: "The date when the log was created."
    type: "Date and time"

  managerLogin:
    system: "managerLogin"
    name: "Manager login"
    desc: "The learner manager's login."
    type: "Text / String"

  maxNbLearners:
    system: "maxNbLearners"
    name: "Session available registrations"
    desc: "The maximum number of learners that can enroll to the face-to-face event in a session."
    type: "Integer / Int"

  modality:
    system: "modality"
    name: "Training modality"
    desc: "The two most usual training modalities are Learning channel and Blendedx. Those are some old terms we have for legacy modalities: Blended legacy, Knowledge community, 100% Distance learning, Learning feed, Mentored learning and Campus."
    type: "Text / String"

  sessionModificationDate:
    system: "modificationDate"
    name: "Session last update date"
    desc: "The date and time when session had the last modification. It can be found on session detail page on the BackOffice."
    type: "Date and time"

  trainingModificationDate:
    system: "modificationDate"
    name: "Training last update date"
    desc: "The date and time when training had the last modification. It can be found on training detail page on the BackOffice."
    type: "Date and time"

  nbLO:
    system: "nbLO"
    name: "learning objects amount"
    desc: "It will return how many learning objects are available in the session."
    type: "Integer / Int"

  nbLOFinished:
    system: "nbLOFinished"
    name: "learning objects finished amount"
    desc: "It will return how many learning objects the learner finished in the session."
    type: "Integer / Int"

  nbLOStarted:
    system: "nbLOStarted"
    name: "learning objects started amount"
    desc: "It will return how many learning objects the learner started in the session. The finished contents will not be counted."
    type: "Integer / Int"

  sessionPathModificationDate:
    system: "pathModificationDate"
    name: "Session path update date"
    desc: "The date and time when session path had the last modification. It could be adding new content, reorganizing folders, etc."
    type: "Date and time"

  trainingPathModificationDate:
    system: "pathModificationDate"
    name: "Training path update date"
    desc: "The date and time when training path had the last modification. It could be adding new content, reorganizing folders, etc."
    type: "Date and time"

  pointsGained:
    system: "pointsGained"
    name: "Activity points gained"
    desc: "How many points the learner received in the activity. Not necessarily the amount of points the learner earned will be equal to the amount that the activity offers."
    type: "Integer / Int"

  sessionProgression:
    system: "progression"
    name: "Session progression"
    desc: "The learner progression on the session. It will not have the % at the end of the number."
    type: "Decimal / double"

  learningObjectProgression:
    system: "progression"
    name: "Learning object progression"
    desc: "The learner progression on the learning object. It will not have the % at the end of the number."
    type: "Decimal / double"

  progressionMandatory:
    system: "progressionMandatory"
    name: "Session progress mandatory"
    desc: "At the platform, it is possible to set some contents as mandatory. This data will have the learner progression only on these contents in the session."
    type: "Decimal / double"

  progressStatus:
    system: "progressStatus"
    name: "Activity status"
    desc: "Values available: Not started, Started, Completed, Pending Feedback and Feedback given.It will have the learner status on the activity and it will be related to the 'Progression' column. Some status ('Pending feedback' and 'Feedback given') are available just for Assignment and Assessment types. Example: If progression is 30% the activity status will be 'Started'. If the progression is 75% and the activity type is 'Assignment', then the activity status will be 'Pending feedback'."
    type: "Text / String"

  sessionRegisteredLearners:
    system: "registeredLearners"
    name: "Session registered learners"
    desc: "The number of learners that have enrolled to the session."
    type: "Integer / Int"

  trainingRegisteredLearners:
    system: "registeredLearners"
    name: "Session registered learners"
    desc: "The number of learners that have enrolled to the training."
    type: "Integer / Int"

  sessionRegistrationDate:
    system: "registrationDate"
    name: "Session registration date"
    desc: "The date and time when the learner was registered on this session."
    type: "Date and time"

  learningObjectRegistrationDate:
    system: "registrationDate"
    name: "Learning object registration date"
    desc: "The date and time when the learner was registered on this learning object."
    type: "Date and time"

  sessionRegistrationGuid:
    system: "registrationGuid"
    name: "Session registration GUID"
    desc: "The learner is registered in sessions. GUID is auto-generated by CrossKnowledge platform, is unique and will be the registration identifier. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  learningObjectRegistrationGuid:
    system: "registrationGuid"
    name: "Learning object registration GUID"
    desc: "The learner is registered in learning objects. GUID is auto-generated by CrossKnowledge platform, is unique and will be the registration identifier. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  reportId:
    system: "reportId"
    name: "Tracking ID"
    desc: "The ID of this tracking. Each row represents one tracking and will have your unique identifier. ID is auto-generated by CrossKnowledge platform and is unique."
    type: "Integer / Int"

  reportGuid:
    system: "reportGuid"
    name: "Tracking GUID"
    desc: "The GUID of this tracking. Each row represents one tracking and will have your unique identifier. GUID is auto-generated by CrossKnowledge platform and will be the tracking identifier. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  sessionScore:
    system: "score"
    name: "Session score"
    desc: "The number of points the learner achieved on this session. Example: 35.00"
    type: "Decimal / float"

  learningObjectScore:
    system: "score"
    name: "Learning object score"
    desc: "The number of points the learner achieved on this learning object. Example: 35.00"
    type: "Decimal / float"

  scoreNPS:
    system: "scoreNPS"
    name: "Net promoter score"
    desc: "The NPS is a metric to measure the learner experience. The learner can give a rate between 0 and 10. 0-6 is considered 'Detractor', 7-8 is 'Passive' and 9-10 is 'Promoter'. On this field, you will have a number between 0 and 10 representing the learner experience on the session."
    type: "Integer / Int"

  sessionEndDate:
    system: "sessionEndDate"
    name: "Session end date"
    desc: "The date when the session will be closed."
    type: "Date and time"

  sessionGuid:
    system: "sessionGuid"
    name: "Session GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform, is unique and can be the official session identifier. It can be obtained via API or Export report if the session is already created. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  sessionId:
    system: "sessionId"
    name: "Session ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the official session identification. It can be obtained via API or Export report if the session is already created."
    type: "Integer / Int"
   
  sessionLocale:
    system: "sessionLocale"
    name: "Session language"
    desc: "The session will have the same language defined for the training."
    type: "Text / String"

  sessionStartDate:
    system: "sessionStartDate"
    name: "Session start date"
    desc: "The date when the session will be available for learner access."
    type: "Date"

  sessionTitle:
    system: "sessionTitle"
    name: "Session title"
    desc: "The title of the session. It does not need to be the same as the training title."
    type: "Text / String"

  startDate:
    system: "startDate"
    name: "Session start date"
    desc: "The date when the session will be available for learner access."
    type: "Date"

  sessionStatus:
    system: "status"
    name: "Session status"
    desc: "Predefined as Completed, Incomplete or Not started."
    type: "Text / String"

  classRoomStatus:
    system: "status"
    name: "Learning object status"
    desc: "Predefined as Completed, Incomplete or Not started."
    type: "Text / String"

  learningObjectStatus:
    system: "status"
    name: "Learning object status"
    desc: "Predefined as Completed, Incomplete, Pending feedback or Not started."
    type: "Text / String"

  connectionStatus:
    system: "status"
    name: "Connection status"
    desc: "0 when it is failed or 1 when it is successful."
    type: "Integer / Int"

  submissionDate:
    system: "submissionDate"
    name: "Activity submission date"
    desc: "This data is available only when the activity type is 'Assignment' or 'Assessment'. It will indicate the date when the learner submitted the reply to that activity to have a feedback."
    type: "Date and time"

  templatedValue:
    system: "templatedValue"
    name: "Templated value"
    desc: "A column to be used with the 'templates' parameter. This column requires an attribute 'templateId' which refers to the definition of one template."
    type: "Text / String"

  thresholdReachedDate:
    system: "thresholdReachedDate"
    name: "Session threshold reached date"
    desc: "Session threshold is the amount of points that the learner must achieve to the session status be 'Completed'. It is defined when the training/session is created or edited at 'Completion threshold setting' (Threshold step on BackOffice platform)."
    type: "Date and time"

  sessionTimeGlobal:
    system: "timeGlobal"
    name: "Session time spent within search period"
    desc: "The total time the learner spent on the session in the searched period. Example: If the report is tracking data from the last 02 months, the data in this field will be related to the time the learner spent on the session in the past 02 months. The time spent in that window."
    type: "Time spent format"

  contentTimeGlobal:
    system: "timeGlobal"
    name: "Content time spent within search period"
    desc: "The total time the learner spent on the content in the searched period. Example: If the report is tracking data from the last 02 months, the data in this field will be related to the time the learner spent on the content in the past 02 months. The time spent in that window."
    type: "Time spent format"

  trackingLogTimeGlobal:
    system: "timeGlobal"
    name: "Content time spent within search period"
    desc: "The time the learner spent on the learning resource on the day related to the current log. Example: John spent 10 minutes watching the video 'Welcome to this training' on the 'session 01' at 2020-04-03 10:10:20. And he spent more 5 minutes watching the video 'Welcome to this training' on 'session 01' at 2020-04-03 20:30:10."
    type: "Time spent format"

  timeSpentCBT:
    system: "timeSpentCBT"
    name: "Time spent on classroom activity"
    desc: "Only the time the learner spent on classroom activities. This time is defined when the classroom activity is set up in the Blendedx training."
    type: "Time spent format"

  timeSpentDigital:
    system: "timeSpentDigital"
    name: "Time spent on online activities"
    desc: "Only the time the learner spent on online activities. Learning resources and classroom activities are not included."
    type: "Time spent format"

  sessionTimeSpent:
    system: "timeSpent"
    name: "Session time spent"
    desc: "The total time the learner spent on the session independent if there is a date filter. If the report doesn't have a date filter, the 'Content time spent' and the 'Content time spent within search period' will contain the same value."
    type: "Time spent format"

  contentTimeSpent:
    system: "timeSpent"
    name: "Content time spent"
    desc: "The total time the learner spent on the content independent if there is a date filter. If the report doesn't have a date filter, the 'Content time spent' and the 'Content time spent within search period' will contain the same value."
    type: "Time spent format"

  title:
    system: "title"
    name: "Title"
    desc: "The title of the main object exported (when there is only one type of object exported). For example, you will need more specific columns when exporting registrations or tracking (learningObjectVersionTitle, sessionTitle, trainingTitle...)."
    type: "Text / String"

  trainingAudience:
    system: "trainingAudience"
    name: "Training audience"
    desc: "The target audience for the training. For whom the training is indicated. It is set up at 'Who should attend?'' field in 'General settings' step."
    type: "Text / Longtext"

  trainingBenefits:
    system: "trainingBenefits"
    name: "Training benefits"
    desc: "What improvement the training will bring to the learner. It is set up at 'Learning outcomes' field in 'General settings' step. "
    type: "Text / Longtext"

  trainingBOLink:
    system: "trainingBOLink"
    name: "Training link in admin interface "
    desc: "The URL to the page where the training is available on Admin interface. If the learner access this URL, he/she will not have access, because it is available only for admin users."
    type: "URL"

  trainingChapters:
    system: "trainingChapters"
    name: "Training chapters"
    desc: "The hierarchy of the training."
    type: "Text / String"

  trainingContentAuthor:
    system: "trainingContentAuthor"
    name: "Content author"
    desc: "The name of the author for the content. The author name is defined in the 'Authors' field when the content is created or update. It can have more than one author."
    type: "Text / String"

  trainingContentCatalog:
    system: "trainingContentCatalog"
    name: "Content catalog"
    desc: "Where the content is created (for which catalog)."
    type: "Text / String"

  trainingContentCode:
    system: "trainingContentCode"
    name: "Content reference field"
    desc: "This field is usually used for content code with client patterns. It can be useful to help the client to identify each content using the patterns that they already defined on their side."
    type: "Text / String"

  trainingContentFolder:
    system: "trainingContentFolder"
    name: "Training content folder"
    desc: "The folder where the content is stored within the training."
    type: "Text / String"

  trainingContentGuid:
    system: "trainingContentGuid"
    name: "Content GUID"
    desc: "The GUID will be the content identification. GUID is auto-generated by CrossKnowledge platform and is unique. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  trainingContentId:
    system: "trainingContentId"
    name: "Content ID"
    desc: "The ID will be the content identification. ID is auto-generated by CrossKnowledge platform and is unique. "
    type: "Integer / Int"

  trainingContentMandatory:
    system: "trainingContentMandatory"
    name: "Training content mandatory"
    desc: "It will indicate if the content is mandatory on that training. The content can be mandatory on the training A but doesn't need to be mandatory on the training B."
    type: "Y or N"

  trainingContentOrder:
    system: "trainingContentOrder"
    name: "Training content order"
    desc: "The sort order of the learning object in the training course."
    type: "Float"

  trainingContentRuntime:
    system: "trainingContentRuntime"
    name: "Training content runtime"
    desc: "The runtime of the learning object (SCORM content, CrossKnowledge learning product,...)."
    type: "Text / String"

  trainingContentSubtype:
    system: "trainingContentSubtype"
    name: "Training content subtype"
    desc: "The subtype of the learning object (Business review, custom, session,...)."
    type: "Text / String"

  trainingContentTitle:
    system: "trainingContentTitle"
    name: "Content title"
    desc: "The title of the content."
    type: "Text / String"

  trainingContentType:
    system: "trainingContentType"
    name: "Content type"
    desc: "The same data available on BackOffice about the learning object version type. Some data examples: interactive content, audio, video, image, work to submit."
    type: "Text / String"

  trainingDuration:
    system: "trainingDuration"
    name: "Training duration"
    desc: "The training duration can be defined when the training is created or edited."
    type: "Text / String"

  trainingFolderDescription:
    system: "trainingFolderDescription"
    name: "Training folder"
    desc: "The description of the folders in the training course. It must be a comma-separated list."
    type: "Text / Longtext"

  trainingFurtherInformation:
    system: "trainingFurtherInformation"
    name: "Training further information"
    desc: "This field can have data on other information related to the training. It can be set up at 'Further information' field in 'General settings' step."
    type: "Text / Longtext"

  trainingGoals:
    system: "trainingGoals"
    name: "Training goals"
    desc: "The main goals that the learner will achieve during this training. It can be set up at 'What you will learn' field in 'General settings' step."
    type: "Text / Longtext"

  trainingGuid:
    system: "trainingGuid"
    name: "Training GUID"
    desc: "GUID is auto-generated by CrossKnowledge platform, is unique and can be the official training identifier. It can be obtained via API or Export report if the training is already registered. GUID format example: 345C0A3-B8AB-7F65-0638-39B0E1244AA8"
    type: "Text / String (40)"

  trainingId:
    system: "trainingId"
    name: "Training ID"
    desc: "ID is auto-generated by CrossKnowledge platform and is unique. The ID can be the official training identification. It can be obtained via API or Export report if the training is already created."
    type: "Integer / Int"

  trainingLearningPath:
    system: "trainingLearningPath"
    name: "Training overview"
    desc: "This field should contain step by step about what the learner will learn. It can be set up at 'Training course overview' field in 'General settings' step."
    type: "Text / Longtext"

  trainingLocale:
    system: "trainingLocale"
    name: "Training language"
    desc: "It is a mandatory field in 'General settings' step. It defines in which language the training is available."
    type: "Text / String"

  trainingModality:
    system: "trainingModality"
    name: "Training modality"
    desc: "The two most usual training modalities are Learning Channel and Blendedx. Those are some old terms we have for legacy modalities: Blended legacy, Knowledge community, 100% Distance learning, Learning feed, Mentored learning and Campus."
    type: "Text / String"

  trainingPathCode:
    system: "trainingPathCode"
    name: "Training reference field"
    desc: "This field is usually used for training code with client patterns. It can be useful to help the client to identify each training using the patterns that they already defined on their side."
    type: "Text / String"
    
  trainingPrice:
    system: "trainingPrice"
    name: "Training price"
    desc: "What is the price of this training. It can be set up at 'Price' field in 'General settings' step."
    type: "Text / String"

  trainingPublisher:
    system: "trainingPublisher"
    name: "Training publisher"
    desc: "A publisher is any website, company or anyone who provides some contents to the platform."
    type: "Text / String"

  trainingStatus:
    system: "trainingStatus"
    name: "Training status"
    desc: "The status of the training course: Under construction, Published or Archive. By default, it is set as C (for Under construction), P (for Published) or A (for Archive), but it can be changed at the parameters (ask your Integration Consultant for more details)."
    type: "Training status format"

  trainingTitle:
    system: "trainingTitle"
    name: "Training title"
    desc: "The title of the training course."
    type: "Text / String"

  trainingWelcomeText:
    system: "trainingWelcomeText"
    name: "Training welcome text"
    desc: "The welcome text of the training."
    type: "Text / Longtext"

##Parameters and filters
param:

  activityNames:
    system: "activityNames"
    name: "Activity names"
    desc: "It will return only the tracking data related to the activities searched. It must be a comma-separated list."
    type: "Text / String"

  activityType:
    system: "activityType"
    name: "Activity type"
    desc: "Those are the activity types available: Assignment, Open question, Editorial, Classroom activity, Poll, Assessment, Quiz, Survey, Web resource, Learning resource and Action plan."
    type: "Text / String"

  ancestorsWithCurrent:
    system: "ancestorsWithCurrent"
    name: "Current learner entity in the hierarchy"
    desc: 'If the "Learner entity ancestors" field is exported, you can use this parameter to define if, on this field, the learner current entity should be included or not in the hierarchy. Example: Yes: All users -> Entity 01 -> Entity 01.1 or No: All users -> Entity 01'
    type: "Y or N"

  attendanceStatus:
    system: "attendanceStatus"
    name: "Learner attendance status"
    desc: "It will filter only the tracking data related to the specified learners attendance status.
          Attendance status available: present, absent, absent but excused, no information, event not started and not applicable.
          It must be a comma-separated list"
    type: "List"

  badgeCategory:
    system: "badgeCategory"
    name: "Badge category"
    desc: "It will return only the learners that achieved the choosed badge. It allows only one value: Gold, Silver or Bronze."
    type: "List"

  catalogVisibility:
    system: "catalogVisibility"
    name: "Training visibility"
    desc: "If Yes, it will only return  data related to trainings that are visible in the catalog. If No, the opposite will occur."
    type: "Y or N"

  connectionStatusFormat:
    system: "connectionStatusFormat"
    name: "Connection status format"
    desc: "By default, if a connection status is success the value will be 1. Otherwise, the value will be 0. But this parameter allows to overwrite these data."
    type: "connectionStatusFormat (click [here](http://))"

  dateFormat:
    system: "dateFormat"
    name: "Date format"
    desc: 'The default format for date is "YYYY-MM-DD".'
    type: "Text / String"

  dateTimeFormat:
    system: "dateTimeFormat"
    name: "Date and time format"
    desc: 'The default format for date and time is "YYYY-MM-DD hh:ii:ss".'
    type: "Text / String"

  defaultEntityId:
    desc: "The ID of the entity under which all the newly created objects will be placed (default = 1)."
    type: "int"

  defaultLangCode:
    desc: "Default language code to be used if the column `language` is absent or empty."
    type: "string(6)"

  defaultScoreMax:
    desc: "Default maximum score to be used when importing tracking."
    type: "int"

  defaultTime:
    desc: "Time value which will be used when tracking date only contains dates but no times(e.g. MM-DD-YYY). Specify time in hh:ii:ss format. In case a date is imported without time, but the `defaultTime` parameter is not specified,the dates will be imported with the time 00:00:00."
    type: "time"

  deltaMode:
    system: "deltaMode"
    name: "Delta mode"
    desc: >
      It can't be used with the "TimeFrame" filters.
      Only new data (created or updated) since the last export will be exported.
      In order for this parameter to work, the "export guid" attribute must be the same as the previous export.
    type: "Y or N"

  disableImportFlag:
    desc: "If set to `yes`, the generic import will not tag learners in the database as 'updated by the generic import'."
    type: "yesNoElement"

  dontUpdateExistingSessions:
    desc: "Define if the import task is allowed to update the sessions already in the database (option equivalent to fullAccess)."
    type: "yesNoElement"

  durationFormat:
    system: "durationFormat"
    name: "Duration format"
    desc: "You can define which time format you want for the duration fields in this export. Example: hh:mm:ss or minutes or seconds."
    type: "List"

  enableAllLearners:
    desc: "If set to `yes`, this will automatically force activated all the learners account updated by this import. This default value can be overriden by using the `candidateValidity` column for each learner."
    type: "yesNoElement"

  entityIds:
    system: "entityIds"
    name: "Entity ID"
    desc: "It will return only the data related to learners who belong to at least one of the entities searched.
            It must be a comma-separated list."
    type: "Text / String"

  eventClassRoomTypeFilter:
    system: "eventClassRoomTypeFilter"
    name: "Event classroom type"
    desc: "It will return only the classrooms related to the specified type. It can be: Standard (face to face) or Virtual class."
    type: "List"

  eventDurationAllDayFilter:
    system: "eventDurationAllDayFilter"
    name: "Event all day filter"
    desc: "If Yes, you want to export only the all day events."
    type: "Y or N"

  eventStarted:
    system: "eventStarted"
    name: "Event started"
    desc: "If Yes, you want to filter all the events that already started (start date is in the past). If No, you want to filter only the events that didn't started yet."
    type: "Y or N"

  eventStatusFilter:
    system: "eventStatusFilter"
    name: "Event status"
    desc: "Export only the events with the choosed status. It can be: C - Confirmed, P - Pending or CA - Cancelled.]"
    type: "List"

  excludeDeactivatedContents:
    system: "excludeDeactivatedContents"
    name: "Without deactivated contents"
    desc: "If you choose Yes, the deactivated learning objects will not appear on the report."
    type: "Y or N"
  
  exportAllSessions:
    system: "exportAllSessions"
    name: ""
    desc: ""
    type: "Y or N"

  facilitatorGuids:
    system: "facilitatorGuids"
    name: "Facilitator GUID - BackOffice"
    desc: "It will return only the tracking data related to classroom activities that have the specific BackOffice facilitator. It must be a comma-separated list."
    type: "Text / String"
  
  failedConnections:
    system: "failedConnections"
    name: "Failed connections"
    desc: "Do you want to export all the connections the learner did, including failed ones? If Yes, you will export all the connections."
    type: "Y or N"

  foFacilitatorIds:
    system: "foFacilitatorIds"
    name: "Facilitator ID - FrontOffice"
    desc: "It will return only the tracking data related to classroom activities that have the specific FrontOffice facilitator. It must be a comma-separated list."
    type: "Text / String"

  fullAccess:
    desc: "If set to `no`, the import will only update the data which have been previously created or updated by the generic import itself."
    type: "yesNoElement"

  learnersSmartGroups:
    system: "learnersSmartGroups"
    name: "Learners Smartgroups"
    desc: "It will filter only the data related to the selected Smartgroups. It must be a comma-separeted list using the Smartgroup ID."
    type: "Text / String"

  lastNFullMonths:
    system: "lastNFullMonths"
    name: "Last full months"
    desc: "Similar to the Time Frame filter. It will export only the data created or updated less than N full months ago. Example: All the data from the last 3 full months ago. Overrides 'Time Frame' and 'Last Months' filters."
    type: "Integer / Int"

  lastNMonths:
    system: "lastNMonths"
    name: "Last months"
    desc: "Similar to the Time Frame filter. It will export only the data created or updated less than N months ago. Example: All the data from the last 5 months ago. Overrides 'Time Frame' filter."
    type: "Integer / Int"

  locationIds:
    system: "locationIds"
    name: "Event location ID"
    desc: "It will filter the events that will happen in the specified location. It must be a comma-separated list."
    type: "Text / String"

  learningObjectPublishersName:
    system: "learningObjectPublishersName"
    name: "Learning object version publishers"
    desc: "In this case, it will consider the publishers  linked to learning objects (contents). It will filter the data related to the Publisher's title.
            It must be a comma-separated list."
    type: "Text / String"

  maxLength:
    system: "maxLength"
    name: "Cell max length"
    desc: "You can choose a specific maximum length for the cells. Otherwise, the default cell length will be considered."
    type: "Integer / Int"

  modality:
    system: "modality"
    name: "Training modality"
    desc: "You can have the data for a specific Training modality: Learning Channel (learning_channel) and Blendedx (guided).
              We also have some old terms for legacy modalities: Blended legacy, Knowledge community, 100% Distance learning, Learning feed, Mentored learning and Campus."
    type: "List"

  onlyFromImportedTraining:
    system: "onlyFromImportedTraining"
    name: "Data from imported trainings"
    desc: "Only export data related to trainings that were imported."
    type: "Y or N"

  onlyFromImportedRegistrations:
    system: "onlyFromImportedRegistrations"
    name: "Data from imported registrations"
    desc: "Only export data related to registrations that were imported."
    type: "Y or N"

  onlyFromImportedSessions:
    system: "onlyFromImportedSessions"
    name: "Data from imported sessions"
    desc: "Only export data related to sessions that were imported."
    type: "Y or N"
  
  onlyHrisSelectedItems:
    system: "onlyHrisSelectedItems"
    name: "Data for HRIS connector"
    desc: "It allows to export only sessions and contents that were marked for HRIS on BackOffice."
    type: "Text / String"
  
  sessionPreferredLocales:
    system: "preferredLocales"
    name: "Preferred languages"
    desc: "It will return the data related to the session that has at least one of the specified languages.
            It must be a comma-separated list."
    type: "Text / String"

  contentPreferredLocales:
    system: "preferredLocales"
    name: "Preferred languages"
    desc: "It will return the data related to the content has at least one of the specified languages.
            It must be a comma-separated list."
    type: "Text / String"

  publishers:
    system: "publishers"
    name: "Publishers GUID"
    desc: "It will return only the data related to the specified publishers. It must be a comma-separeted list using the Publisher GUID."
    type: "Text / String"

  reactivateRegisteredLearners:
    desc: "By default (value unspecified or set to 'yes'), the action RegisterLearner will automatically reactivate the accounts of all the learners affected by the import. This option needs to be set to 'no' to keep the learners activation status untouched."
    type: "yesNoElement"
    ##check

  sessionReportStatus:
    system: "reportStatus"
    name: "Session status"
    desc: "Available statuses: Not Attempted; Incomplete and Completed."
    type: "Text / String"

  contentReportStatus:
    system: "reportStatus"
    name: "Content status"
    desc: "Available statuses: Not Attempted; Incomplete; Completed and Pending Feedback."
    type: "Text / String"

  roomGuids:
    system: "roomGuids"
    name: "Event room GUID"
    desc: "Only export the events that will happen in the specified rooms. It can be a face to face or vitual room. It must be a comma-separated list."
    type: "Text / String"

  trainingSelectedLocales:
    system: "selectedLocales"
    name: "Training language"
    desc: "It allows to specify in which languages do you want to filter the training. It must be a comma-separated list. Example: fr-FR,en-GB."
    type: "Text / String"

  sessionSelectedLocales:
    system: "selectedLocales"
    name: "Session language"
    desc: "It allows to specify in which languages do you want to filter the session. It must be a comma-separated list. Example: fr-FR,en-GB."
    type: "Text / String"

  sessionGuid:
    system: "sessionGuid"
    name: "Session GUID"
    desc: "It will export only data related to a specific session."
    type: "Text / String (40)"

  sessionSearchField:
    desc: "This option is used to specify the columns that will be used as filters to find the training session."
    type: "sessionSearchField"
    ##check

  completeSessionTitle:
    system: "sessionTitle"
    name: "Session title"
    desc: "The value needs to have a perfect match with the session title on the platform (the session title can't have more words);"
    type: "Text / String"

  sessionTitle:
    system: "sessionTitle"
    name: "Session title"
    desc: "The session title on the platform should contain at least the given value (the session title can have more words)."
    type: "Text / String"

  statusFormat:
    system: "statusFormat"
    name: "Status format"
    desc: "If you want, it is possible to change the default status for a personalized status. The default status are: completed, incomplete and notAttempted."
    type: "List"

  stripHTML:
    system: "stripHTML"
    name: "Remove HTML tag"
    desc: "If not empty, it allows to remove any HTML tag from the exported report."
    type: "Text / String"

  templates:
    system: "templates"
    name: "Customized data "
    desc: "It allows to customize a value for a column. It also allows to combine the values of different columns into one."
    type: "templates"
    ##click here (data-templates.html#full-example)

  threshold:
    system: "threshold"
    name: "Threshold point"
    desc: "Whether or not to export tracking data that has no launch date (the learner has never launched the content). When points will be exported, use the threshold to convert them (points*threshold). Useful for incentive tool. Default value 1 . All values are allowed, so be careful (0, negatives, etc)"
    type: "Decimal / float"

  sessionTimeFrames:
    system: "timeFrames"
    name: "Time frame - Number"
    desc: "The Time frame filter will export all the data related to the specified period of time (e.g: All the session from the last 3 months).
              In this field you choose the number of days/months/years you want (e.g: 3)"
    type: "timeFrameScale"

  contentTimeFrames:
    system: "timeFrames"
    name: "Time frame - Number"
    desc: "The Time frame filter will export all the data related to the specified period of time (e.g: All the content from the last 3 months).
              In this field you choose the number of days/months/years you want (e.g: 3)"
    type: "timeFrameScale"

  sessionTimeFramesScale:
    system: "timeFramesScale"
    name: "Time frame - Scale"
    desc: "The Time frame filter will export all the data related to the specified period of time (e.g: All the session from the last 3 months).
              In this field you choose if you want to filter by days, months or years (e.g: full months)."
    type: "timeFrameScale"

  contentTimeFramesScale:
    system: "timeFramesScale"
    name: "Time frame - Scale"
    desc: "The Time frame filter will export all the data related to the specified period of time (e.g: All the content from the last 3 months).
              In this field you choose if you want to filter by days, months or years (e.g: full months)."
    type: "timeFrameScale"

  sessionTimeFrameScaleMode:
    system: "timeFrameScaleMode"
    name: "Time frame - Mode"
    desc: 'The Time frame filter will export all the data related to the specified period of time (e.g: All the session from the last 3 months).

              Available for some exports: For the column ""TimeGlobal"", you can choose if you want all the time the learner spent on the session (LastActivity mode) or only the time he spent during the period filtered (TimeSpent mode).'
    type: "timeFrameScale"

  contentTimeFrameScaleMode:
    system: "timeFrameScaleMode"
    name: "Time frame - Mode"
    desc: 'The Time frame filter will export all the data related to the specified period of time (e.g: All the content from the last 3 months).

              Available for some exports: For the column ""TimeGlobal"", you can choose if you want all the time the learner spent on the content (LastActivity mode) or only the time he spent during the period filtered (TimeSpent mode).'
    type: "timeFrameScale"

  sessionTimeGlobalFormat:
    system: "timeGlobalFormat"
    name: "Session time spent within search period format"
    desc: 'The time format which the "Session time spent within search period" column should be exported.'
    type: 'The accepted formats can be found <a href="data-timeglobalformat.html">here</a>'

  contentTimeGlobalFormat:
    system: "timeGlobalFormat"
    name: "Content time spent within search period format"
    desc: 'The time format which the "Content time spent within search period" column should be exported.'
    type: "The accepted formats can be found [here] (http://data-timeglobalformat.html)"

  timeZone:
    desc: "Time format in which the `timeGlobal` column should be exported, must be in TZ database format e.g.(America/Sao_Paulo). Full list available on <a href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>Wikipedia</a>"
    type: "string(50)"

  traineeSearchField:
    desc: "This option is used to specify the columns that will be used as filters to find the learner."
    type: "traineeSearchField"

  trainingSearchField:
    desc: "This option is used to specify the columns that will be used as filters to find the training course."
    type: "trainingSearchField"

  trainingGuid:
    system: "trainingGuid"
    name: "Training GUID"
    desc: "It will export only data related to a specific training using the GUID."
    type: "Text / String (40)"

  trainingIds:
    system: "trainingIds"
    name: "Training ID"
    desc: "It allows to filter the tracking data for specific trainings. It must be a comma-separated list."
    type: "Text / String"

  trainingModalityFormat:
    system: "trainingModalityFormat"
    name: "Training modality"
    desc: "You can have the data for a specific Training modality: Learning Channel (learning_channel) and Blendedx (guided).
              We also have some old terms for legacy modalities: Blended legacy, Knowledge community, 100% Distance learning, Learning feed, Mentored learning and Campus."
    type: "List"

  trainingPathCode:
    system: "trainingPathCode"
    name: "Training reference field"
    desc: "It will export only data related to a specific training using the reference field."
    type: "Text / String"

  trainingPublishers:
    system: "trainingPublishers"
    name: "Training publisher"
    desc: "In this case, it will consider the publishers  linked to a training. It will filter the data related to the Publisher's title.
            It must be a comma-separated list."
    type: "Text / String"

  trainingStatus:
    system: "trainingStatus"
    name: "Training status"
    desc: "It will only export data related to trainings that have the specific status. It must be a comma-separated list. Status available: Under construction, Published or Archive."
    type: "Text / String"

  trainingStatusFormat:
    system: "trainingStatusFormat"
    name: "Training Status format"
    desc: "If you want, it is possible to change the default training status for a personalized status. The default training status are: C (Under construction), P (Published) and A (Archive)."
    type: "trainingStatusFormat (click here)"

  trainingTitle:
    system: "trainingTitle"
    name: "Training title"
    desc: "The training title on the platform should contain at least the given value."
    type: "Text / String"

  withoutLaunchTime:
    system: "withoutLaunchTime"
    name: "Content not launched"
    desc: "It allows to export tracking data related to contents that the learner has never launched. Notice: This parameter shouldn't be used with the Time Frame filter."
    type: "Y or N"

datatype:
  candidateValidity:
    url: /data-candidatevalidity.html

  connectionStatusFormat:
    url: /data-connectionstatusformat.html

  registerFlag:
    url: /data-registerflag.html

  reportStatus:
    url: /data-reportstatus.html

  sessionSearchField:
    url: /data-sessionsearchfield.html

  statusFormat:
    url: /data-statusformat.html

  templates:
    url: /data-templates.html

  timeGlobalFormat:
    url: /data-timeglobalformat.html

  timeFrameScale:
    url: /data-timeframescalemode.html

  trackingStatus:
    url: /data-trackingstatus.html

  traineeSearchField:
    url: /data-traineesearchfield.html

  trainingSearchField:
    url: /data-trainingsearchfield.html

  trainingStatusFormat:
    url: /data-trainingstatusformat.html
