col:

  activityName:
    desc: "Name of the activity."
    type: "string"

  activityID:
    desc: "Id of the activity."
    type: "int"

  activityDuration:
    desc: "Duration of the activity."
    type: "int"

  activityFirstAccessDate:
    desc: "Indicates when the learner launched the activity for the first time"
    type: "datetime"

  activityId:
    desc: "The ID used in the database to reference the Blendedx activity."
    type: "int"

  activityLastAccessDate:
    desc: "Indicates when the learner launched the activity for the last time"
    type: "datetime"

  activityPoints:
    desc: "Points of the activity."
    type: "int"

  activityType:
    desc: "Label of the activity type (ex: Learning resource, Assessment, Survey...)."
    type: "string"

  attendanceStatus:
    desc: "Learner's attendance status (only available for classroom activities). "
    type: "enum(Present, Absent, Absent but excused, No information, Not applicable)"

  badge:
    desc: "Label of the badge."
    type: "string"

  badgeCategory:
    desc: "Badge category."
    type: "enum(Gold, Silver, Bronze, One shot, Custom)"

  badgeCode:
    desc: "Unique ID/code for a badge."
    type: "string"

  badgeDateTime:
    desc: "Date time the badge was acquired."
    type: "datetime"

  candidateAccountActivated:
    desc: "The status of the learner's account (actived/disabled)."
    type: "enum(Y, N, U)"

  candidateAccountActivatedFrom:
    desc: "If the learner's account is only active during a limited period of time, the first date for which it is active."
    type: "date"

  candidateAccountActivatedUntil:
    desc: "If the learner's account is only active during a limited period of time, the last date for which it is active."
    type: "date"

  candidateBadges:
    desc: "Total amont of badges acquired by the learner."
    type: "int"

  candidateCustomFieldGuid:
    desc: "Data for one of the learner's possible custom fields (GUID of the custom field needs to be specified, please check the examples)."
    type: "string(250)"

  candidateEmail:
    desc: "The learner's e-mail address."
    type: "string"
    mandatory: "No, but at least one of the fields `candidateLogin`, `candidateRefNumber` and `candidateEmail` must be specified"

  candidateEntityAncestors:
    desc: "The learner's entity ancestors."
    type: "string"

  candidateEntityId:
    desc: "The ID used in the database to reference the learner's entity."
    type: "int"

  candidateEntityName:
    desc: "The learner's entity name."
    type: "string"

  candidateFirstname:
    desc: "The learner's first name."
    type: "string"

  candidateFollowLinkedin:
    desc: "The learner's LinkedIn username."
    type: "string(250)"

  candidateFollowTwitter:
    desc: "The learner's Twitter username."
    type: "string(250)"

  candidateFollowWeb:
    desc: "The learner's web page."
    type: "url(250)"

  candidateGuid:
    desc: "The learner's GUID."
    type: "string(40)"

  candidateId:
    desc: "The database ID used to identify the learner."
    type: "int"

  candidateLanguages:
    desc: "The ordered list of chosen locales for the learner."
    type: "string"

  candidateLocale:
    desc: "The chosen display locale for the learner, based on the available locales on the instance and their preferences."
    type: "string(6)"

  candidateLocales:
    desc: "The ordered list of chosen locales for the learner."
    type: "string"

  candidateLogin:
    desc: "The learner's login."
    type: "string"
    mandatory: No, but at least one of the fields candidateLogin, candidateRefNumber and candidateEmail must be specified

  candidateName:
    desc: "The learner's name (family name/surname)."
    type: "string"

  candidatePoints:
    desc: "Total amont of points acquired by the learner."
    type: "int"

  candidatePresentation:
    desc: "The candidate's presentation text."
    type: "longtext"

  candidateRefNumber:
    desc: "The learner's reference number."
    type: "string"
    mandatory: No, but at least one of the fields candidateLogin, candidateRefNumber and candidateEmail must be specified

  candidateSmartgroups:
    desc: "The list of the learner's smartgroups names separated by semicolons."
    type: "string"

  candidateTimeZone:
    desc: "The candidate's timezone."
    type: "string(50)"

  candidateValidity:
    desc: "The status of the learner's account (active/disabled)."
    type: "candidateValidity"

  catalogVisibility:
    desc: "\"Y\" if the training course associated with the current context is visible in the public catalogue, \"N\" otherwise."
    type: "enum(Y, N)"

  completionTime:
    desc: "The date at which the content referenced by the tracking row has been last accessed"
    type: "datetime"

  constantValue:
    desc: "Return the constant value specified in this column's child elements."
    type: "string"

  contentGuid:
    desc: "The GUID of the learning object version."
    type: "string(40)"

  contentLocale:
    desc: "The locale of the learning object version."
    type: "string(6)"

  contentRefNumber:
    desc: "The reference number of the learning object version."
    type: "string"

  contentTitle:
    desc: "The title of the learning object version."
    type: "string"

  creationDate:
    desc: "The date at which the object (learner, training course or training session) was created."
    type: "date"

  custom:
    desc: "Value for one of the learner's custom fields."
    type: "string(250)"

  description:
    desc: "The description of the main object from the current row."
    type: "longtext"

  enabledFrom:
    desc: "If the learner's account is only active during a limited period of time, the first date for which it is active."
    type: "date"

  enabledUntil:
    desc: "If the learner's account is only active during a limited period of time, the last date for which it is active."
    type: "date"

  entityGuid:
    desc: "GUID of the learner's entity."
    type: "string(40)"

  entityId:
    desc: "Database ID of the learner's entity."
    type: "int"

  entityName:
    desc: "Name of the learner's entity."
    type: "string"

  endDate:
    desc: "The end date of the session."
    type: "date"

  eventAllDay:
    desc: "'true' if the event lasts the whole day, false otherwise."
    type: "enum(true, false)"

  eventClassRoomCapacity:
    desc: "The room capacity of the event."
    type: "int"

  eventClassRoomDescription:
    desc: "The room description of the event."
    type: "longtext"

  eventClassRoomTitle:
    desc: "The room title of the event."
    type: "string"

  eventClassRoomType:
    desc: "The room type of the event."
    type: "enum(Standard, Virtual)"

  eventDescription:
    desc: "The description of the event."
    type: "longtext"

  eventDuration:
    desc: "The duration of the event."
    type: "int"

  eventEndDate:
    desc: "The end date of the event."
    type: "date"

  eventEndTime:
    desc: "The end time of the event."
    type: "time"

  eventFacilitator:
    desc: "The full name of the facilitator of the event (back-office user)."
    type: "string"

  eventFacilitatorGuid:
    desc: "The GUID of the facilitator of the event (back-office user)."
    type: "string(40)"

  eventLocation:
    desc: "The location of the event."
    type: "string"

  eventLocationID:
    desc: "The ID of the location of the event."
    type: "int"

  eventRoom:
    desc: "The room of the event."
    type: "string"

  eventRoomGuid:
    desc: "The guid of the room of the event."
    type: "string(40)"

  eventID:
    desc: "The ID of the event."
    type: "int"

  eventStartDate:
    desc: "The start date of the event."
    type: "date"

  eventStartTime:
    desc: "The start time of the event."
    type: "time"

  eventStatus:
    desc: "The validation status of the event. Values can be C, P, CA, respectively for Confirmed, Pending, CAncelled."
    type: "enum(C, P, CA)"

  eventTeacher:
    desc: "The teacher of the event."
    type: "string"

  eventTimeZone:
    desc: "The timezone of the event."
    type: "string(50)"

  eventTitle:
    desc: "The title of the event."
    type: "string"

  eventVirtualMeetingURL:
    desc: "Link to the virtual meeting of the event."
    type: "url"

  eventVirtualRoomLink:
    desc: "Link to the virtual room of the event."
    type: "url"

  feedbackDate:
    desc: "Indicates when the facilitator has sent his/her feedback"
    type: "datetime"

  firstAccessDate:
    desc: "The date and time at which the content referenced by the tracking row has been launched for the first time."
    type: "datetime"

  firstCompletionDate:
    desc: "The date and time at which the content referenced by the training has been completed for the first time. If this field is not present in the import files, but the data imported is considered completed, the value of this field will be automatically set to today."
    type: "datetime"

  firstLaunchDate:
    desc: "The date and time at which the content referenced by the tracking row has been launched for the first time."
    type: "datetime"

  foFacilitatorName:
    desc: "Name of the front-office facilitor of the event."
    type: "string"

  foFacilitatorFirstname:
    desc: "First name of the front-office facilitor of the event."
    type: "string"

  foFacilitatorEmail:
    desc: "Email address of the front-office facilitor of the event."
    type: "string"

  gamificationAction:
    desc: "Label localized of the action."
    type: "string"

  gamificationActionCode:
    desc: "unique ID/code for an action."
    type: "string"

  gamificationDateTime:
    desc: "Date time when this action occured."
    type: "datetime"

  gamificationPoints:
    desc: "The number of points acquired for this action."
    type: "int"

  hieracrchyEntityName:
    desc: "The name of the entity being imported. It is also used as unique identifier to define if an entity needs to be created or if an existing entity with this name needs to be updated.
      <br/>If several entities have the same title, the first entity found with that name will be updated."
    type: "string"

  ignoredColumn:
    desc: "Column present in the import file but to be ignored becuse it's not relevant for this import action"

  interventionDate:
    desc: "Start date of the intervention."
    type: "datetime"
    mandatory: "yes"

  interventionDuration:
    desc: "Duration of the intervention (in hours)."
    type: "int"
    mandatory: "yes"

  interventionGuid:
    desc: "Unique GUID of the intervention (only for update)."
    type: "string(40)"
    mandatory: "yes"

  interventionStatus:
    desc: "Status for the intervention currently imported. Possible values are A (Active) or C (Cancelled)"
    type: "enum(A, C)"
    mandatory: "yes"

  lastAccessDate:
    desc: "The date and time at which the content referenced by the tracking row has been accessed for the last time."
    type: "datetime"

  lastPlatformAccessDate:
    desc: "The last date at which the learner has accessed the platform."
    type: "datetime"

  learningObjectAssignements:
    desc: "The number of tracking rows associated with this learning object."
    type: "int"

  learningObjectAuthorFirstName:
    desc: "The first name of the author of the learning object."
    type: "string"

  learningObjectAuthorId:
    desc: "The ID used by the database to identify the author of the learning object."
    type: "int"

  learningObjectAuthorLastName:
    desc: "The last name of the author of the learning object."
    type: "string"

  learningObjectAverageCompletionTime:
    desc: "The average time spent by learners of the learning object."
    type: "int"

  learningObjectAverageScore:
    desc: "The average rating of the learning object."
    type: "float"

  learningObjectCode:
    desc: "The reference number of the learning object."
    type: "string"

  learningObjectCompletions:
    desc: "The number of tracking rows associated with the learning object which are completed."
    type: "int"

  learningObjectCreationDate:
    desc: "The creation date of the learning object."
    type: "datetime"

  learningObjectDisplayedType:
    desc: "The type (interactive content, audio, image, ...) of the learning object."
    type: "string(50)"

  learningObjectDuration:
    desc: "The duration of the learning object (in minutes)."
    type: "int"

  learningObjectFirstLaunchDate:
    desc: "The date at which the learning object has been launched for the first time."
    type: "datetime"

  learningObjectGuid:
    desc: "The GUID of the learning object."
    type: "string(40)"

  learningObjectId:
    desc: "The ID used by the database to identify the learning object."
    type: "int"

  learningObjectIncludedInLO:
    desc: "Metadata field 'Included in this learning product' of learning object."
    type: "longtext"

  learningObjectLastLaunchDate:
    desc: "The date at which the learning object has been launched for the last time."
    type: "datetime"

  learningObjectLearningPoints:
    desc: "Metadata field 'What you will learn' of learning object."
    type: "longtext"

  learningObjectLevel:
    desc: "The level of the learning object."
    type: "enum(0, 1, 2, 3)"

  learningObjectLocales:
    desc: "The locales in which the learning object is available."
    type: "string"

  learningObjectModificationDate:
    desc: "The last modification date of the learning object."
    type: "datetime"

  learningObjectNbOfComments:
    desc: "The number of comments for the learning object."
    type: "int"

  learningObjectNbTimesFavorited:
    desc: "The number of times the learning object has been added to a favorite list by a learner."
    type: "int"

  learningObjectPublisher:
    desc: "The publisher of the learning object."
    type: "datetime"

  learningObjectRatingByLearners:
    desc: "The rating given by the learners on the learning object."
    type: "float"

  learningObjectRatingDisplayed:
    desc: "The rating that is displayed on the learning object."
    type: "float"

  learningObjectRatingNbByLearners:
    desc: "The number of rating votes by learners on the learning object."
    type: "int"

  learningObjectRatingNbDisplayed:
    desc: "The displayed number of rating votes by learners on the learning object."
    type: "int"

  learningObjectRealCompletionTime:
    desc: "The last launch date of the resource, or NULL if the progression is not 100%."
    type: "datetime"

  learningObjectSummary:
    desc: "The summary (description) of the learning object."
    type: "longtext"

  learningObjectTags:
    desc: "The tags associated to the learning object."
    type: "longtext"

  learningObjectTargetAudience:
    desc: "The target audience of the learning object."
    type: "longtext"

  learningObjectThemes:
    desc: "The themes of the learning object."
    type: "longtext"

  learningObjectThumbnailLarge:
    desc: "The URL to the large-sized thumbnail of the learning object."
    type: "url"

  learningObjectThumbnailMedium:
    desc: "The URL to the medium-sized thumbnail of the learning object."
    type: "url"

  learningObjectThumbnailSmall:
    desc: "The URL to the small-sized thumbnail of the learning object."
    type: "url"

  learningObjectTitle:
    desc: "The title of the learning object."
    type: "string"

  learningObjectTotalTimeSpent:
    desc: "The total time spent on the learning object by all learners of the platform (in minutes)."
    type: "int"

  learningObjectType:
    desc: "The runtime (SCORM, MP4, AICC, ...) of the learning object."
    type: "string(50)"

  learningObjectVersionAssignements:
    desc: "The number of tracking rows associated with this learning object version."
    type: "int"

  learningObjectVersionAuthorFirstName:
    desc: "The first name of the author of the learning object version."
    type: "string"

  learningObjectVersionAuthorId:
    desc: "The ID used by the database to identify the author of the learning object version."
    type: "int"

  learningObjectVersionAuthorLastName:
    desc: "The last name of the author of the learning object version."
    type: "string"

  learningObjectVersionAverageCompletionTime:
    desc: "The average time spent by learners of the learning object version (in minutes)."
    type: "int"

  learningObjectVersionAverageScore:
    desc: "The average rating of the learning object version."
    type: "float"

  learningObjectVersionCode:
    desc: "The reference number of the learning object version."
    type: "string"

  learningObjectVersionCompletions:
    desc: "The number of tracking rows associated with the learning object version which are completed."
    type: "int"

  learningObjectVersionCreationDate:
    desc: "The date at which the learning object version was created."
    type: "datetime"

  learningObjectVersionDisplayedType:
    desc: "The type (interactive content, audio, image, ...) of the learning object version."
    type: "string(50)"

  learningObjectVersionDuration:
    desc: "The duration of the learning object version (in minutes)."
    type: "int"

  learningObjectVersionFirstLaunchDate:
    desc: "The date at which the learning object version was launched for the first time."
    type: "datetime"

  learningObjectVersionGuid:
    desc: "The GUID used by the database to identify the learning object version."
    type: "string(40)"

  learningObjectVersionId:
    desc: "The ID used by the database to identify the learning object version."
    type: "int"

  learningObjectVersionIncludedInLO:
    desc: "Metadata field 'Included in this learning product' of learning object version."
    type: "longtext"

  learningObjectVersionIsMobile:
    desc: "Metadata field 'Launchable in the Learn application' of learning object version."
    type: "enum(true, false)"

  learningObjectVersionLastLaunchDate:
    desc: "The date at which the learning object version was launched for the last time."
    type: "datetime"

  learningObjectVersionLearningPoints:
    desc: "Metadata field 'What you will learn' of learning object."
    type: "string"

  learningObjectVersionLevel:
    desc: "The level of the learning object version."
    type: "enum(0, 1, 2, 3)"

  learningObjectVersionLocale:
    desc: "The locale of the learning object version."
    type: "string(6)"

  learningObjectVersionLoGuid:
    desc: "The GUID of the original learning object."
    type: "string(40)"

  learningObjectVersionLoId:
    desc: "The ID used by the database to identify the original learning object."
    type: "int"

  learningObjectVersionModificationDate:
    desc: "The date at which the learning object version was modified for the last time."
    type: "datetime"

  learningObjectVersionPublisher:
    desc: "The publisher of the learning object version."
    type: "string"

  learningObjectVersionStatus:
    desc: "The status of a Learning Object version"
    type: "enum(Validated, Disabled, Under construction, Pending validation)"

  learningObjectVersionSummary:
    desc: "The summary (description) of the learning object version."
    type: "longtext"

  learningObjectVersionTags:
    desc: "The tags associated with the learning object version."
    type: "longtext"

  learningObjectVersionTargetAudience:
    desc: "The target audience of the learning object version."
    type: "longtext"

  learningObjectVersionThemes:
    desc: "A comma separated list of the themes of the learning object version."
    type: "longtext"

  learningObjectVersionThumbnailLarge:
    desc: "The URL to the large-sized thumbnail of the learning object version."
    type: "url"

  learningObjectVersionThumbnailMedium:
    desc: "The URL to the medium-sized thumbnail of the learning object version."
    type: "url"

  learningObjectVersionThumbnailSmall:
    desc: "The URL to the small-sized thumbnail of the learning object version."
    type: "url"

  learningObjectVersionTitle:
    desc: "The title of the learning object version."
    type: "string"

  learningObjectVersionTotalTimeSpent:
    desc: "The total time spent on the learning object version by all learners of the platform (in minutes)."
    type: "int"

  learningObjectVersionType:
    desc: "The runtime (SCORM, MP4, AICC, ...) of the learning object version."
    type: "string(50)"

  learningObjectVersionVersion:
    desc: "The version number of the learning object version."
    type: "int"

  learningObjectViewsByLearners:
    desc: "The number of views of the learning object."
    type: "int"

  learningObjectViewsDisplayed:
    desc: "The displayed number of views of the learning object (real view by learners + fake views added in the back-office)."
    type: "int"

  likes:
    desc: "Displays the number of likes received for the activity."
    type: "int"

  locale:
    desc: "Label of the locale."
    type: "string"

  logDate:
    desc: "The date at which the tracking log was created."
    type: "date"

  lovCode:
    desc: "The reference number of the learning object version."
    type: "string"
    mandatory: No, but at least one of the fields lovCode and lovGuid must be specified

  lovCodes:
    desc: >
      This option references the LO's refNumber and is used to specify wich LOs are included in the training course. It's possible to separate LOs by step with double pipe "||" and into the step with comma "," (ex: "REF1,REF2||REF3||REF4").
    type: "longtext"
    mandatory: Column itself must be added in the XML configuration file, but can remain empty in the CSV file by setting &lt;mandatory&gt;no&lt;/mandatory&gt; inside the field's tag.

  lovGuid:
    desc: "The GUID used by the database to identify the learning object version."
    type: "string(40)"
    mandatory: No, but at least one of the fields lovCode and lovGuid must be specified

  managerLogin:
    desc: "The manager's login."
    type: "string"

  managerRefNumber:
    desc: "The manager's reference number."
    type: "string"

  maxNbLearners:
    desc: "The maximum number of learners that can enroll to the training session."
    type: "int"

  hasClassroomActivity:
    desc: "Return if the training session has a classroom activity."
    type: "enum(Y, N)"    

  modality:
    desc: "The modality of the associated training course."
    type: "enum(learning_channel, kc, distanciel, blended, campus, mentored_action_learning, portal, serious_game, public_course, vodeclic, learning_feed, content_test)"

  modificationDate:
    desc: "The date at which the object (training course, training session) was last modified."
    type: "datetime"

  nbLO:
    desc: "The total number of learning objects in the same session as the learning object referenced by the tracking row."
    type: "int"

  nbLOFinished:
    desc: "The total number of learning objects that the learner has finished in the same session as the learning object referenced by the tracking row."
    type: "int"

  nbLOStarted:
    desc: "The total number of learning objects that the learner has started in the same session as the learning object referenced by the tracking row."
    type: "int"

  pathModificationDate:
    desc: "The date at which the associated training course was last modified (learning object added, folders reorganized,...)."
    type: "datetime"

  platformAccessDate:
    desc: "A date at which the learner has accessed the platform."
    type: "datetime"

  pointsGained:
    desc: "Points gained on the content."
    type: "int"

  presentation:
    desc: "`Presentation` field from the learner profile."
    type: "longtext"

  progression:
    desc: >
      <ul class="fieldDescription"><li><b>For Tracking and Tracking logs: </b>the progress of the learner on the current content referenced by the tracking row.</li>
      <li><b>For Blendedx registrations: </b>the raw progress of the learner in the current session, based on the total points for all activities (= doesn't take into account the threshold).</li>
      <li><b>For registrations in legacy modalities: </b>the raw progress of the learner in the current session, based on all the resources, both optional and mandatory.</li></ul>
    type: "float"

  progressionMandatory:
    desc: >
      <ul class="fieldDescription"><li><b>For Blendedx: </b>the progress of the learner in the session (based on the session threshold if defined).</li>
      <li><b>For legacy modalities: </b>the total progress of the learner (only on the mandatory learning objects) in the session.</li></ul>
    type: "float"

  progressStatus:
    desc: "Activity's completion status (some statuses are only available depending on the activity type)"
    type: "enum(Not started, Started, Completed, Pending feeback, Feedback given)"

  registeredLearners:
    desc: "The number of learners that have enrolled to the training session."
    type: "int"

  registerFlag:
    desc: "Optional flag to allow to unregister a learner from a session. By default the behaviour for this field is to register the learner. Please see the dedicated page for more details."
    type: "registerFlag"

  registrationDate:
    desc: "The date of the registration."
    type: "datetime"

  registrationGuid:
    desc: "The GUID of the registration."
    type: "string(40)"

  reportId:
    desc: "The database ID used to identify the tracking row."
    type: "int"

  reportGuid:
    desc: "The GUID of the tracking row."
    type: "string(40)"

  roomGuid:
    desc: "Unique GUID of the room."
    type: "string(40)"
    mandatory: "yes"

  roomLabel:
    desc: "Label of the room."
    type: "string"
    mandatory: "yes"

  roomCapacity:
    desc: "Total number of places in this room."
    type: "int"

  score:
    desc: "The score the learner has achieved on the content."
    type: "float"

  scoreMax:
    desc: "The maximum score the learner can  achieve on the content."
    type: "int"

  scoreNPS:
    desc: "Score of a NPS activity."
    type: "int"

  sessionAction:
    desc: "Flag to define wether the current data row should update the related session ('M') or delete it ('A'). When unset, the default behaviour is to updated it."
    type: "enum(M, A)"

  sessionEndDate:
    desc: "The end date of the session."
    type: "date"

  sessionGuid:
    desc: "The GUID of the session."
    type: "string(40)"
    mandatory: >
      No, but at least one of the following fields must be specified: `sessionGuid` or `sessionTitle` or `sessionId`

  sessionId:
    desc: "The database ID used to identify the session."
    type: "int"
    mandatory: >
      No, but at least one of the following fields must be specified: `sessionGuid` or `sessionTitle` or `sessionId`

  sessionLocale:
    desc: "The locale of the current session."
    type: "string(6)"

  sessionStartDate:
    desc: "The start date of the session."
    type: "date"

  sessionTitle:
    desc: "The title of the session."
    type: "string"
    mandatory: >
      No, but at least one of the following fields must be specified: `sessionGuid` or `sessionTitle` or `sessionId`

  startDate:
    desc: "The start date of the session."
    type: "date"

  status:
    desc: >
      <ul class="fieldDescription"><li><b>For the providers related to tracking: </b>the progress status of the content referenced by the tracking row. The returned values can be overriden thanks to option 'statusFormat'.
      <br />Type: enum(completed, incomplete, not attempted)</li>
      <li><b>For the provider 'Platform Candidates Access': </b>the status of the of connection attempt (0 = failed, 1 = successful).
      <br />Type: enum(0, 1)</li></ul>
    type: "enum"

  submissionDate:
    desc: "Indicates when the learner has submitted his/her assignment or reply."
    type: "datetime"

  teacherLogin:
    desc: "Login of the teacher (back-office user) to assign as a teacher to the current intervention."
    type: "string"
    mandatory: "yes"

  templatedValue:
    desc: "A column to be used with the 'templates' option. This column requires an attribute 'templateId' which refers to the definition of one template."
    type: "string"

  thresholdReachedDate:
    desc: "The date on which the learner has reached the success threshold of the training course."
    type: "datetime"

  timeGlobal:
    desc: >
      <ul class="fieldDescription"><li><b>If the current context is a Registration:</b> the total time the learner spent on learning resources for the registration.</li>
      <li><b>If the current context is a Tracking:</b> the total time the learner spent on the learning resource.</li>
      <li><b>If the current context is a Tracking Log:</b> the time the learner spent on the learning resource on the day related to the current log. </li></ul>
      <i class="fa fa-info-circle"></i> If the options timeFrames and timeFramesScale are specified in the provider, then this value is filtered to only the time spent during the chosen period.
    type: "timeGlobalFormat"

  timeSpentCBT:
    desc: >
      The total time spent on classroom events.
      <br/><i class="fa fa-info-circle"></i> If the options timeFrames and timeFramesScale are specified in the provider, this value is filtered to only the time spent during the chosen period.
    type: "timeGlobalFormat"

  timeSpentDigital:
    desc: >
      The total time spent on Blendedx activities, excluding learning resource activities.
      <br/><i class="fa fa-info-circle"></i> If the options timeFrames and timeFramesScale are specified in the provider, then this value is filtered to only the time spent during the chosen period.
    type: "timeGlobalFormat"

  timeSpent:
    desc: >
      <ul class="fieldDescription"><li><b>If the current context is a Registration:</b> the total time the learner spent on the registration.
      <br/>timeSpent = timeGlobal + timeSpentCBT + timeSpentDigital
      <br/><i class="fa fa-info-circle"></i> If the options timeFrames and timeFramesScale are specified in the provider, then this value is filtered to only the time spent during the chosen period.
      </li>
      <li><b>If the current context is an Activity:</b> the time the learner spent on the activity. </li></ul>
    type: "timeGlobalFormat"

  title:
    desc: "The title of the main object exported (when there is only one type of object exported). For example, you will need more specific columns when exporting registrations or tracking (learningObjectVersionTitle, sessionTitle, trainingTitle...)"
    type: "string"

  trackingStatus:
    desc: "Completion status for the tracking currently imported. This is a mapping column, see specific documentation page for more details."
    type: "trackingStatus"

  trainingAction:
    desc: "Flag to define wether the current data row should update the related training course ('M') or delete it ('A'). When unset, the default behaviour is to updated it."
    type: "enum(M, A)"

  trainingAudience:
    desc: "The target audience of the training course (metadata field 'Who should attend?')."
    type: "longtext"

  trainingBenefits:
    desc: "The benefits of the training course (metadata field 'Learning outcomes')."
    type: "longtext"

  trainingBOLink:
    desc: "The URL to the record page of the training course."
    type: "url"

  trainingChapters:
    desc: "The chapter hierarchy of the training course."
    type: "longtext"

  trainingContentAuthor:
    desc: "The author of the learning resource."
    type: "string"

  trainingContentCatalog:
    desc: "The catalog to which the learning object belongs."
    type: "string"

  trainingContentCode:
    desc: "The reference number of the learning resource."
    type: "string"

  trainingContentFolder:
    desc: "The name of the folder in which the learning object is placed (inside the training course)."
    type: "string"

  trainingContentGuid:
    desc: "The GUID of the learning object."
    type: "string(40)"

  trainingContentId:
    desc: "The ID of the learning resource."
    type: "int"

  trainingContentMandatory:
    desc: "The flag (Y or N) indicating if the learning object is mandatory in the context of the training course."
    type: "enum(Y, N)"

  trainingContentOrder:
    desc: "The sort order of the learning object in the training course."
    type: "float"

  trainingContentRuntime:
    desc: "The runtime of the learning object (SCORM content, CrossKnowledge learning product,...)."
    type: "string(50)"

  trainingContentSubtype:
    desc: "The subtype of the learning object (Business review, custom, session,...)."
    type: "string(50)"

  trainingContentTitle:
    desc: "The title of the learning resource."
    type: "string"

  trainingContentType:
    desc: "The type of the learning object (Reading document, interactive document,...)."
    type: "string(50)"

  trainingCost:
    desc: "Metadata 'Price' of the training course."
    type: "string"

  trainingDescription:
    desc: "The description of the training course."
    type: "longtext"

  trainingDuration:
    desc: "The duration of the training course."
    type: "string"

  trainingFolderDescription:
    desc: "The descriptions of the folders in the training course, separated by commas."
    type: "longtext"

  trainingFurtherInformation:
    desc: "Further information on the training course (metadata field 'Further information')."
    type: "longtext"

  trainingGoals:
    desc: "The goals of the training course (metadata field 'What you will learn')."
    type: "longtext"

  trainingGuid:
    desc: "The GUID of the training course."
    type: "string(40)"
    mandatory: >
      No, but at least one of the following fields must be specified: `trainingId` or `trainingGuid` or `trainingPathCode` (not all these fields might be available in each provider)

  trainingId:
    desc: "The database ID used to identify the training course."
    type: "int"
    mandatory: >
      No, but at least one of the following fields must be specified: `trainingId` or `trainingGuid` or `trainingPathCode` (not all these fields might be available in each provider)

  trainingLearningPath:
    desc: "The overview of the training course (metadata field 'Training course overview')."
    type: "longtext"

  trainingLocale:
    desc: "The main locale of the training course."
    type: "string(6)"

  trainingModality:
    desc: "The modality of the training course."
    type: "enum(learning_channel, kc, distanciel, blended, campus, mentored_action_learning, portal, serious_game, public_course, vodeclic, learning_feed, content_test)"
    mandatory: >
      Yes when using `createOrUpdateTrainingCourseAction`.

  trainingOutcomes:
    desc: "Metadata 'Learning outcomes' of the training course."
    type: "longtext"

  trainingOverview:
    desc: "Metadata 'Training course overview' of the training course."
    type: "longtext"

  trainingPathCode:
    desc: "The reference number of the training course."
    type: "string"
    mandatory: >
      No, but at least one of the following fields must be specified: `trainingId` or `trainingGuid` or `trainingPathCode` (not all these fields might be available in each provider)

  trainingPrice:
    desc: "The price of the training course."
    type: "string"
    mandatory: >
      No, but at least one of the following fields must be specified: `sessionGuid` or `sessionTitle` or `sessionId` AND `trainingPathCode` or `trainingId`

  trainingPublisher:
    desc: "The publisher of the training course."
    type: "string"

  trainingSteps:
    desc: >
      This option is used to describe steps that will be added or updated. This option is only used for blended and blendedx modalities. This option is mandatory for blended modality, and mandatory for blendedx on course creation, but not for course update. Steps are separated by double pipe “||” and the separator used to separate step title and step duration is “|>”. A step is described by “StepTitle|>StepDuration” where StepTitle cannot be empty and duration is optionnal and it's a integer which represents step duration in days (eg : "Intro|>1||Basics|>2||Advanced concepts|>4||Conclusion").
    type: "longtext"

  trainingStatus:
    desc: "The validation status of the training course. The values displayed in this column are C, P, A which respectively mean Under Construction, Published, Archive. These values can be configured via the `trainingStatusFormat` parameter."
    type: "enum(C, P, A)"

  trainingTitle:
    desc: "The title of the training course."
    type: "string"

  trainingWelcomeText:
    desc: "The welcome text of the training course."
    type: "longtext"

  trainingWhatYouWillLearn:
    desc: "Metadata 'What you will learn' of the training course."
    type: "longtext"

param:

  activityNames:
    desc: "Filter on the name of activities. Can contain several values separated by commas."
    type: "string"

  activityType:
    desc: "Blendedx registrations are exported as soon as their related path contains at least one activity of this type. Other modalities' registrations are exported if the filter is 0 (content) and 4 (classroom) and contains CBT activities"
    type: "string"

  ancestorsWithCurrent:
    desc: "For each tracking data row, the learner's hierarchy can be exported with the other data. This parameter tells the provider whether to include the learner's group in the hierarchy or not. If set to `yes`, the learner's current group will be included. Otherwise, it will be removed from the exported hierarchy."
    type: "yesNoElement"

  attendanceStatus:
    desc: "Filter on the learner's attendance status (only available for classroom activities)."
    type: "enum(present, absent, absent but excused, no information, event not started, not applicable)"

  badgeCategory:
    desc: "Restrict on certain badge 'colors'. Only one value is allowed."
    type: "enum(gold, silver, bronze)"

  catalogVisibility:
    desc: "Only export training courses that have the specified catalog visibility."
    type: "yesNoElement"

  connectionStatusFormat:
    desc: "The format in which to display the connection status."
    type: "connectionStatusFormat"

  dateFormat:
    desc: "Format for dates in the exported data. When not specified, the default date format is `YYYY-MM-DD`."
    type: "string"

  dateTimeFormat:
    desc: "Format for dates in the exported data. When not specified, the default value is `YYYY-MM-DD hh:ii:ss`."
    type: "string"

  defaultEntityId:
    desc: "The ID of the entity under which all the newly created objects will be placed (default = 1)."
    type: "int"

  defaultLangCode:
    desc: "Default language code to be used if the column `language` is absent or empty."
    type: "string(6)"

  defaultScoreMax:
    desc: "Default maximum score to be used when importing tracking."
    type: "int"

  defaultTime:
    desc: "Time value which will be used when tracking date only contains dates but no times(e.g. MM-DD-YYY). Specify time in hh:ii:ss format. In case a date is imported without time, but the `defaultTime` parameter is not specified,the dates will be imported with the time 00:00:00."
    type: "time"

  deltaMode:
    desc: "Only export new data (with respect to the last export). In order for this parameter to work, the previous exports must have had a `guid` attribute (`<export guid='foo'>`). This feature cannot be used alongside `timeFramesScale`."
    type: "yesNoElement"

  disableImportFlag:
    desc: "If set to `yes`, the generic import will not tag learners in the database as 'updated by the generic import'."
    type: "yesNoElement"

  dontUpdateExistingSessions:
    desc: "Define if the import task is allowed to update the sessions already in the database (option equivalent to fullAccess)."
    type: "yesNoElement"

  durationFormat:
    desc: "Format for durations in the exported data (ex: learning resource duration)."
    type: "enum(hh:mm:ss, minutes, seconds)"

  enableAllLearners:
    desc: "If set to `yes`, this will automatically force activated all the learners account updated by this import. This default value can be overriden by using the `candidateValidity` column for each learner."
    type: "yesNoElement"

  entityIds:
    desc: "A comma-separated list of the entity ids to filter on. If multiple entity IDs are provided, then the export will return data about learners who belong to at least one of those entities."
    type: "string"

  eventClassRoomTypeFilter:
    desc: "Export with filter Virtual or Standard."
    type: "enum(Standard, Virtual)"

  eventDurationAllDayFilter:
    desc: "Export all day between a start day and a end day."
    type: "yesNoElement"

  eventStarted:
    desc: "Whether the classroom event's date is in the past."
    type: "yesNoElement"

  eventStatusFilter:
    desc: "Export only events with a chosen status (C - Confirmed, P - Pending, CA - Cancelled)"
    type: "enum(C, P, CA)"

  excludeDeactivatedContents:
    desc: "Excludes learning object versions that have `Disabled` status"
    type: "yesNoElement"

  exportAllSessions:
    desc: "Whether to include failed connections."
    type: "yesNoElement"

  facilitatorGuids:
    desc: "Filter on the GUID of back-office facilitators. Can contain several values separated by commas."
    type: "string"

  failedConnections:
    desc: "Whether to include failed connections."
    type: "yesNoElement"

  foFacilitatorIds:
    desc: "Filter on the database ID of front-office facilitators. Can contain several values separated by commas."
    type: "string"

  fullAccess:
    desc: "If set to `no`, the import will only update the data which have been previously created or updated by the generic import itself."
    type: "yesNoElement"

  learnersSmartGroups:
    desc: "A list of IDs of smartgroups separated by commas. Allows to filter the exported results on the specified smartgroups."
    type: "string"

  lastNFullMonths:
    desc: "Similar to the 'timeFrames*' options. Filter to only export data created or updated less than N full months ago.<br /><i>Overrides 'timeFrameScale' and 'lastNMonths' options.</i>"
    type: "int"

  lastNMonths:
    desc: "Similar to the 'timeFrames*' options. Filter to only export data created or updated less than N months ago.<br /><i>Overrides 'timeFrameScale' option.</i>"
    type: "int"

  locationIds:
    desc: "Filter on the database ID of one or several location (column eventLocationID). Can contain several values separated by commas."
    type: "string"

  learningObjectPublishersName:
    desc: "Only export data related to the list of publishers (linked to learning resources), filtered by title. Can contain several values separated by commas."
    type: "string"

  maxLength:
    desc: "If not empty, this option will crop each value to the specified max length (each cell, not each line)."
    type: "int"

  modality:
    desc: "Only export data related to a training course that belongs to the specified modality."
    type: "enum('', learning_channel, kc, blended, campus, distanciel, mentored_action_learning, portal, serious_game, content_test, guided)"

  onlyFromImportedTraining:
    desc: "Only export tracking data related to trainings that were imported."
    type: "yesNoElement"

  onlyFromImportedRegistrations:
    desc: "Only export tracking data related to registrations that were imported."
    type: "yesNoElement"

  onlyFromImportedSessions:
    desc: "Only export tracking data related to sessions that were imported."
    type: "yesNoElement"

  onlyHrisSelectedItems:
    desc: "Only export results defined in the BO of the CKLS for the HRIS connector. <br/> @see <a href='https://techwiki.crossknowledge.com/LMS/HRIS_integration/Data_export_-_Add_a_filter_to_export_only_selected_resources'>on Techwiki</a>"
    type: "string"

  preferredLocales:
    desc: "The comma-separated list of preferred locales."
    type: "string"

  publishers:
    desc: "Only export tracking data on content issued by the given publishers GUID. Multiple publishers may be specified in a comma-separated list."
    type: "string"

  reactivateRegisteredLearners:
    desc: "By default (value unspecified or set to 'yes'), the action RegisterLearner will automatically reactivate the accounts of all the learners affected by the import. This option needs to be set to 'no' to keep the learners activation status untouched."
    type: "yesNoElement"

  reportStatus:
    desc: "Export tracking data that have the specified report statuses (several values can be given)."
    type: "reportStatus"

  roomGuids:
    desc: "Filter on the GUID of one or several rooms. Can contain several values separated by commas."
    type: "string"

  selectedLocales:
    desc: "The comma-separated list of selected locales."
    type: "string"

  sessionGuid:
    desc: "Only export data related to a training session that has the specified GUID."
    type: "string(40)"

  sessionSearchField:
    desc: "This option is used to specify the columns that will be used as filters to find the training session."
    type: "sessionSearchField"

  sessionTitle:
    desc: "Only export data related to a training session that has a title that exactly matches the given string (except for the trainingSessionMetadataProvider and the sessionAuditMetadataProvider where the session title only needs to contain the given string)"
    type: "string"

  statusFormat:
    desc: "This parameter is used to convert LMS progress status to Scorm-compliant progress status."
    type: "statusFormat"

  stripHTML:
    desc: "If not empty, this option will remove any HTML tag from the exported data."
    type: "string"

  templates:
    desc: "The definition of a dynamic template, to allow to customize the returned value for a column. It also allows to combine the values of several columns into one."
    type: "templates"

  threshold:
    desc: "Whether or not to export tracking data that has no launch date (the learner has never launched the content). When points will be exported, use the threshold to convert them (points*threshold). Useful for incentive tool. Default value 1 . All values are allowed, so be careful (0, negatives, etc)"
    type: "float"

  timeFrames:
    desc: "Once a learner has completed a learning object or activity, a completion date will be saved in the associated tracking row. This parameter is used to the provider to only export tracking data where the completion date is in a certain time span. Must be used with `timeFramesScale.`"
    type: "timeFrameScale"

  timeFramesScale:
    desc: "Once a learner has completed a learning object or activity, a completion date will be saved in the associated tracking row. This parameter is used to the provider to only export tracking data where the completion date is in a certain time span. Must be used with `timeFrames`."
    type: "timeFrameScale"

  timeFrameScaleMode:
    desc: "This parameter is used in addition to `timeFrames` and `timeFramesScale` to determine how the total time spent is estimated. Possible values are `lastActivity` or `timeSpent`"
    type: "timeFrameScale"

  timeGlobalFormat:
    desc: "Time format in which the `timeGlobal` column should be exported"
    type: "timeGlobalFormat"

  timeZone:
    desc: "Time format in which the `timeGlobal` column should be exported, must be in TZ database format e.g.(America/Sao_Paulo). Full list available on <a href='https://en.wikipedia.org/wiki/List_of_tz_database_time_zones'>Wikipedia</a>"
    type: "string(50)"

  traineeSearchField:
    desc: "This option is used to specify the columns that will be used as filters to find the learner."
    type: "traineeSearchField"

  trainingSearchField:
    desc: "This option is used to specify the columns that will be used as filters to find the training course."
    type: "trainingSearchField"

  trainingGuid:
    desc: "Only export data related to a training course that has the specified GUID."
    type: "string(40)"

  trainingIds:
    desc: "Only export data related to the training courses that have an ID included in the comma-separated list specified in this parameter."
    type: "string"

  trainingModalityFormat:
    desc: "Only export data related to the training courses with the chosen modality, filtered by their database name (ex: blended, guided, learning_channel)."
    type: "string"

  trainingPathCode:
    desc: "Only export data related to a training course that has the specified code."
    type: "string"

  trainingPublishers:
    desc: "Only export data related to the list of publishers (linked to training courses), filtered by title. Can contain several values separated by commas."
    type: "string"

  trainingStatus:
    desc: "Only export training courses that have the specified statuses. This parameter contains a comma-separated list of training statuses (see the available values in column `trainingStatus`)."
    type: "string"

  trainingStatusFormat:
    desc: "Configure what value to display for each training status value."
    type: "trainingStatusFormat"

  trainingTitle:
    desc: "Only export data related to a training course that has a title that contains the given string."
    type: "string"

  withoutLaunchTime:
    desc: >
      Whether or not to export tracking data that has no launch date (the learner has never launched the content). By default, the provider will only export tracking data where the learner has launched the content at least once.
      <br/><i class="fa fa-warning"></i> Please note that this option should not be used together with the `timeFrames` options, as the `timeFrames` options are based on the learners activity, so using both options together will prevent from retrieving the data without activity.
    type: "yesNoElement"

datatype:
  candidateValidity:
    url: /data-candidatevalidity.html

  connectionStatusFormat:
    url: /data-connectionstatusformat.html

  registerFlag:
    url: /data-registerflag.html

  reportStatus:
    url: /data-reportstatus.html

  sessionSearchField:
    url: /data-sessionsearchfield.html

  statusFormat:
    url: /data-statusformat.html

  templates:
    url: /data-templates.html

  timeGlobalFormat:
    url: /data-timeglobalformat.html

  timeFrameScale:
    url: /data-timeframescalemode.html

  trackingStatus:
    url: /data-trackingstatus.html

  traineeSearchField:
    url: /data-traineesearchfield.html

  trainingSearchField:
    url: /data-trainingsearchfield.html

  trainingStatusFormat:
    url: /data-trainingstatusformat.html
